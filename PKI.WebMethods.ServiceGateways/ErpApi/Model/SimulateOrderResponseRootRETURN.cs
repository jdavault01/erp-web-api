/* 
 * eCommerce
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.WebApi.DataAccess.ErpApi.Client.SwaggerDateConverter;

namespace Pki.eBusiness.WebApi.DataAccess.ErpApi.Model
{
    /// <summary>
    /// SimulateOrderResponseRootRETURN
    /// </summary>
    [DataContract]
    public partial class SimulateOrderResponseRootRETURN :  IEquatable<SimulateOrderResponseRootRETURN>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimulateOrderResponseRootRETURN" /> class.
        /// </summary>
        /// <param name="TYPE">TYPE.</param>
        /// <param name="CODE">CODE.</param>
        /// <param name="MESSAGE">MESSAGE.</param>
        /// <param name="LOG_NO">LOG_NO.</param>
        /// <param name="LOG_MSG_NO">LOG_MSG_NO.</param>
        /// <param name="MESSAGEV1">MESSAGEV1.</param>
        /// <param name="MESSAGEV2">MESSAGEV2.</param>
        /// <param name="MESSAGEV3">MESSAGEV3.</param>
        /// <param name="MESSAGEV4">MESSAGEV4.</param>
        public SimulateOrderResponseRootRETURN(string TYPE = default(string), string CODE = default(string), string MESSAGE = default(string), string LOG_NO = default(string), string LOG_MSG_NO = default(string), string MESSAGEV1 = default(string), string MESSAGEV2 = default(string), string MESSAGEV3 = default(string), string MESSAGEV4 = default(string))
        {
            this.TYPE = TYPE;
            this.CODE = CODE;
            this.MESSAGE = MESSAGE;
            this.LOG_NO = LOG_NO;
            this.LOG_MSG_NO = LOG_MSG_NO;
            this.MESSAGEV1 = MESSAGEV1;
            this.MESSAGEV2 = MESSAGEV2;
            this.MESSAGEV3 = MESSAGEV3;
            this.MESSAGEV4 = MESSAGEV4;
        }
        
        /// <summary>
        /// Gets or Sets TYPE
        /// </summary>
        [DataMember(Name="TYPE", EmitDefaultValue=false)]
        public string TYPE { get; set; }

        /// <summary>
        /// Gets or Sets CODE
        /// </summary>
        [DataMember(Name="CODE", EmitDefaultValue=false)]
        public string CODE { get; set; }

        /// <summary>
        /// Gets or Sets MESSAGE
        /// </summary>
        [DataMember(Name="MESSAGE", EmitDefaultValue=false)]
        public string MESSAGE { get; set; }

        /// <summary>
        /// Gets or Sets LOG_NO
        /// </summary>
        [DataMember(Name="LOG_NO", EmitDefaultValue=false)]
        public string LOG_NO { get; set; }

        /// <summary>
        /// Gets or Sets LOG_MSG_NO
        /// </summary>
        [DataMember(Name="LOG_MSG_NO", EmitDefaultValue=false)]
        public string LOG_MSG_NO { get; set; }

        /// <summary>
        /// Gets or Sets MESSAGEV1
        /// </summary>
        [DataMember(Name="MESSAGE_V1", EmitDefaultValue=false)]
        public string MESSAGEV1 { get; set; }

        /// <summary>
        /// Gets or Sets MESSAGEV2
        /// </summary>
        [DataMember(Name="MESSAGE_V2", EmitDefaultValue=false)]
        public string MESSAGEV2 { get; set; }

        /// <summary>
        /// Gets or Sets MESSAGEV3
        /// </summary>
        [DataMember(Name="MESSAGE_V3", EmitDefaultValue=false)]
        public string MESSAGEV3 { get; set; }

        /// <summary>
        /// Gets or Sets MESSAGEV4
        /// </summary>
        [DataMember(Name="MESSAGE_V4", EmitDefaultValue=false)]
        public string MESSAGEV4 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SimulateOrderResponseRootRETURN {\n");
            sb.Append("  TYPE: ").Append(TYPE).Append("\n");
            sb.Append("  CODE: ").Append(CODE).Append("\n");
            sb.Append("  MESSAGE: ").Append(MESSAGE).Append("\n");
            sb.Append("  LOG_NO: ").Append(LOG_NO).Append("\n");
            sb.Append("  LOG_MSG_NO: ").Append(LOG_MSG_NO).Append("\n");
            sb.Append("  MESSAGEV1: ").Append(MESSAGEV1).Append("\n");
            sb.Append("  MESSAGEV2: ").Append(MESSAGEV2).Append("\n");
            sb.Append("  MESSAGEV3: ").Append(MESSAGEV3).Append("\n");
            sb.Append("  MESSAGEV4: ").Append(MESSAGEV4).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SimulateOrderResponseRootRETURN);
        }

        /// <summary>
        /// Returns true if SimulateOrderResponseRootRETURN instances are equal
        /// </summary>
        /// <param name="input">Instance of SimulateOrderResponseRootRETURN to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SimulateOrderResponseRootRETURN input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TYPE == input.TYPE ||
                    (this.TYPE != null &&
                    this.TYPE.Equals(input.TYPE))
                ) && 
                (
                    this.CODE == input.CODE ||
                    (this.CODE != null &&
                    this.CODE.Equals(input.CODE))
                ) && 
                (
                    this.MESSAGE == input.MESSAGE ||
                    (this.MESSAGE != null &&
                    this.MESSAGE.Equals(input.MESSAGE))
                ) && 
                (
                    this.LOG_NO == input.LOG_NO ||
                    (this.LOG_NO != null &&
                    this.LOG_NO.Equals(input.LOG_NO))
                ) && 
                (
                    this.LOG_MSG_NO == input.LOG_MSG_NO ||
                    (this.LOG_MSG_NO != null &&
                    this.LOG_MSG_NO.Equals(input.LOG_MSG_NO))
                ) && 
                (
                    this.MESSAGEV1 == input.MESSAGEV1 ||
                    (this.MESSAGEV1 != null &&
                    this.MESSAGEV1.Equals(input.MESSAGEV1))
                ) && 
                (
                    this.MESSAGEV2 == input.MESSAGEV2 ||
                    (this.MESSAGEV2 != null &&
                    this.MESSAGEV2.Equals(input.MESSAGEV2))
                ) && 
                (
                    this.MESSAGEV3 == input.MESSAGEV3 ||
                    (this.MESSAGEV3 != null &&
                    this.MESSAGEV3.Equals(input.MESSAGEV3))
                ) && 
                (
                    this.MESSAGEV4 == input.MESSAGEV4 ||
                    (this.MESSAGEV4 != null &&
                    this.MESSAGEV4.Equals(input.MESSAGEV4))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TYPE != null)
                    hashCode = hashCode * 59 + this.TYPE.GetHashCode();
                if (this.CODE != null)
                    hashCode = hashCode * 59 + this.CODE.GetHashCode();
                if (this.MESSAGE != null)
                    hashCode = hashCode * 59 + this.MESSAGE.GetHashCode();
                if (this.LOG_NO != null)
                    hashCode = hashCode * 59 + this.LOG_NO.GetHashCode();
                if (this.LOG_MSG_NO != null)
                    hashCode = hashCode * 59 + this.LOG_MSG_NO.GetHashCode();
                if (this.MESSAGEV1 != null)
                    hashCode = hashCode * 59 + this.MESSAGEV1.GetHashCode();
                if (this.MESSAGEV2 != null)
                    hashCode = hashCode * 59 + this.MESSAGEV2.GetHashCode();
                if (this.MESSAGEV3 != null)
                    hashCode = hashCode * 59 + this.MESSAGEV3.GetHashCode();
                if (this.MESSAGEV4 != null)
                    hashCode = hashCode * 59 + this.MESSAGEV4.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
