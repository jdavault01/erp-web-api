/* 
 * eCommerce
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.WebApi.DataAccess.ErpApi.Client.SwaggerDateConverter;

namespace Pki.eBusiness.WebApi.DataAccess.ErpApi.Model
{
    /// <summary>
    /// SimulateOrderRequestRootORDERHEADERIN
    /// </summary>
    [DataContract]
    public partial class SimulateOrderRequestRootORDERHEADERIN :  IEquatable<SimulateOrderRequestRootORDERHEADERIN>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimulateOrderRequestRootORDERHEADERIN" /> class.
        /// </summary>
        /// <param name="DOC_TYPE">DOC_TYPE.</param>
        /// <param name="SALES_ORG">SALES_ORG.</param>
        /// <param name="DISTR_CHAN">DISTR_CHAN.</param>
        /// <param name="DIVISION">DIVISION.</param>
        /// <param name="PURCH_DATE">PURCH_DATE.</param>
        /// <param name="PO_METHOD">PO_METHOD.</param>
        /// <param name="COLLECT_NO">COLLECT_NO.</param>
        /// <param name="PMNTTRMS">PMNTTRMS.</param>
        /// <param name="COMPL_DLV">COMPL_DLV.</param>
        /// <param name="SHIP_COND">SHIP_COND.</param>
        public SimulateOrderRequestRootORDERHEADERIN(string DOC_TYPE = default(string), string SALES_ORG = default(string), string DISTR_CHAN = default(string), string DIVISION = default(string), string PURCH_DATE = default(string), string PO_METHOD = default(string), string COLLECT_NO = default(string), string PMNTTRMS = default(string), string COMPL_DLV = default(string), string SHIP_COND = default(string))
        {
            this.DOC_TYPE = DOC_TYPE;
            this.SALES_ORG = SALES_ORG;
            this.DISTR_CHAN = DISTR_CHAN;
            this.DIVISION = DIVISION;
            this.PURCH_DATE = PURCH_DATE;
            this.PO_METHOD = PO_METHOD;
            this.COLLECT_NO = COLLECT_NO;
            this.PMNTTRMS = PMNTTRMS;
            this.COMPL_DLV = COMPL_DLV;
            this.SHIP_COND = SHIP_COND;
        }
        
        /// <summary>
        /// Gets or Sets DOC_TYPE
        /// </summary>
        [DataMember(Name="DOC_TYPE", EmitDefaultValue=false)]
        public string DOC_TYPE { get; set; }

        /// <summary>
        /// Gets or Sets SALES_ORG
        /// </summary>
        [DataMember(Name="SALES_ORG", EmitDefaultValue=false)]
        public string SALES_ORG { get; set; }

        /// <summary>
        /// Gets or Sets DISTR_CHAN
        /// </summary>
        [DataMember(Name="DISTR_CHAN", EmitDefaultValue=false)]
        public string DISTR_CHAN { get; set; }

        /// <summary>
        /// Gets or Sets DIVISION
        /// </summary>
        [DataMember(Name="DIVISION", EmitDefaultValue=false)]
        public string DIVISION { get; set; }

        /// <summary>
        /// Gets or Sets PURCH_DATE
        /// </summary>
        [DataMember(Name="PURCH_DATE", EmitDefaultValue=false)]
        public string PURCH_DATE { get; set; }

        /// <summary>
        /// Gets or Sets PO_METHOD
        /// </summary>
        [DataMember(Name="PO_METHOD", EmitDefaultValue=false)]
        public string PO_METHOD { get; set; }

        /// <summary>
        /// Gets or Sets COLLECT_NO
        /// </summary>
        [DataMember(Name="COLLECT_NO", EmitDefaultValue=false)]
        public string COLLECT_NO { get; set; }

        /// <summary>
        /// Gets or Sets PMNTTRMS
        /// </summary>
        [DataMember(Name="PMNTTRMS", EmitDefaultValue=false)]
        public string PMNTTRMS { get; set; }

        /// <summary>
        /// Gets or Sets COMPL_DLV
        /// </summary>
        [DataMember(Name="COMPL_DLV", EmitDefaultValue=false)]
        public string COMPL_DLV { get; set; }

        /// <summary>
        /// Gets or Sets SHIP_COND
        /// </summary>
        [DataMember(Name="SHIP_COND", EmitDefaultValue=false)]
        public string SHIP_COND { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SimulateOrderRequestRootORDERHEADERIN {\n");
            sb.Append("  DOC_TYPE: ").Append(DOC_TYPE).Append("\n");
            sb.Append("  SALES_ORG: ").Append(SALES_ORG).Append("\n");
            sb.Append("  DISTR_CHAN: ").Append(DISTR_CHAN).Append("\n");
            sb.Append("  DIVISION: ").Append(DIVISION).Append("\n");
            sb.Append("  PURCH_DATE: ").Append(PURCH_DATE).Append("\n");
            sb.Append("  PO_METHOD: ").Append(PO_METHOD).Append("\n");
            sb.Append("  COLLECT_NO: ").Append(COLLECT_NO).Append("\n");
            sb.Append("  PMNTTRMS: ").Append(PMNTTRMS).Append("\n");
            sb.Append("  COMPL_DLV: ").Append(COMPL_DLV).Append("\n");
            sb.Append("  SHIP_COND: ").Append(SHIP_COND).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SimulateOrderRequestRootORDERHEADERIN);
        }

        /// <summary>
        /// Returns true if SimulateOrderRequestRootORDERHEADERIN instances are equal
        /// </summary>
        /// <param name="input">Instance of SimulateOrderRequestRootORDERHEADERIN to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SimulateOrderRequestRootORDERHEADERIN input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DOC_TYPE == input.DOC_TYPE ||
                    (this.DOC_TYPE != null &&
                    this.DOC_TYPE.Equals(input.DOC_TYPE))
                ) && 
                (
                    this.SALES_ORG == input.SALES_ORG ||
                    (this.SALES_ORG != null &&
                    this.SALES_ORG.Equals(input.SALES_ORG))
                ) && 
                (
                    this.DISTR_CHAN == input.DISTR_CHAN ||
                    (this.DISTR_CHAN != null &&
                    this.DISTR_CHAN.Equals(input.DISTR_CHAN))
                ) && 
                (
                    this.DIVISION == input.DIVISION ||
                    (this.DIVISION != null &&
                    this.DIVISION.Equals(input.DIVISION))
                ) && 
                (
                    this.PURCH_DATE == input.PURCH_DATE ||
                    (this.PURCH_DATE != null &&
                    this.PURCH_DATE.Equals(input.PURCH_DATE))
                ) && 
                (
                    this.PO_METHOD == input.PO_METHOD ||
                    (this.PO_METHOD != null &&
                    this.PO_METHOD.Equals(input.PO_METHOD))
                ) && 
                (
                    this.COLLECT_NO == input.COLLECT_NO ||
                    (this.COLLECT_NO != null &&
                    this.COLLECT_NO.Equals(input.COLLECT_NO))
                ) && 
                (
                    this.PMNTTRMS == input.PMNTTRMS ||
                    (this.PMNTTRMS != null &&
                    this.PMNTTRMS.Equals(input.PMNTTRMS))
                ) && 
                (
                    this.COMPL_DLV == input.COMPL_DLV ||
                    (this.COMPL_DLV != null &&
                    this.COMPL_DLV.Equals(input.COMPL_DLV))
                ) && 
                (
                    this.SHIP_COND == input.SHIP_COND ||
                    (this.SHIP_COND != null &&
                    this.SHIP_COND.Equals(input.SHIP_COND))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DOC_TYPE != null)
                    hashCode = hashCode * 59 + this.DOC_TYPE.GetHashCode();
                if (this.SALES_ORG != null)
                    hashCode = hashCode * 59 + this.SALES_ORG.GetHashCode();
                if (this.DISTR_CHAN != null)
                    hashCode = hashCode * 59 + this.DISTR_CHAN.GetHashCode();
                if (this.DIVISION != null)
                    hashCode = hashCode * 59 + this.DIVISION.GetHashCode();
                if (this.PURCH_DATE != null)
                    hashCode = hashCode * 59 + this.PURCH_DATE.GetHashCode();
                if (this.PO_METHOD != null)
                    hashCode = hashCode * 59 + this.PO_METHOD.GetHashCode();
                if (this.COLLECT_NO != null)
                    hashCode = hashCode * 59 + this.COLLECT_NO.GetHashCode();
                if (this.PMNTTRMS != null)
                    hashCode = hashCode * 59 + this.PMNTTRMS.GetHashCode();
                if (this.COMPL_DLV != null)
                    hashCode = hashCode * 59 + this.COMPL_DLV.GetHashCode();
                if (this.SHIP_COND != null)
                    hashCode = hashCode * 59 + this.SHIP_COND.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
