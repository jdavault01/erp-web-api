/* 
 * eCommerce
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.WebApi.DataAccess.ErpApi.Client.SwaggerDateConverter;

namespace Pki.eBusiness.WebApi.DataAccess.ErpApi.Model
{
    /// <summary>
    /// SimulateOrderResponseRootORDERCCARD
    /// </summary>
    [DataContract]
    public partial class SimulateOrderResponseRootORDERCCARD :  IEquatable<SimulateOrderResponseRootORDERCCARD>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimulateOrderResponseRootORDERCCARD" /> class.
        /// </summary>
        /// <param name="CC_TYPE">CC_TYPE.</param>
        /// <param name="CC_NUMBER">CC_NUMBER.</param>
        /// <param name="CC_VALID_T">CC_VALID_T.</param>
        /// <param name="CC_NAME">CC_NAME.</param>
        /// <param name="BILLAMOUNT">BILLAMOUNT.</param>
        /// <param name="AUTH_FLAG">AUTH_FLAG.</param>
        /// <param name="AUTHAMOUNT">AUTHAMOUNT.</param>
        /// <param name="CURRENCY">CURRENCY.</param>
        /// <param name="CURR_ISO">CURR_ISO.</param>
        /// <param name="AUTH_DATE">AUTH_DATE.</param>
        /// <param name="AUTH_TIME">AUTH_TIME.</param>
        /// <param name="AUTH_CC_NO">AUTH_CC_NO.</param>
        /// <param name="AUTH_REFNO">AUTH_REFNO.</param>
        /// <param name="CC_REACT">CC_REACT.</param>
        /// <param name="CC_RE_AMOUNT">CC_RE_AMOUNT.</param>
        /// <param name="GL_ACCOUNT">GL_ACCOUNT.</param>
        /// <param name="CC_STAT_EX">CC_STAT_EX.</param>
        /// <param name="CC_REACT_T">CC_REACT_T.</param>
        /// <param name="VIRT_CARD">VIRT_CARD.</param>
        /// <param name="MERCHIDCL">MERCHIDCL.</param>
        /// <param name="PRE_AUTH">PRE_AUTH.</param>
        /// <param name="CC_SEQ_NO">CC_SEQ_NO.</param>
        /// <param name="AMOUNTCHAN">AMOUNTCHAN.</param>
        /// <param name="AUTHORTYPE">AUTHORTYPE.</param>
        /// <param name="DATAORIGIN">DATAORIGIN.</param>
        /// <param name="RADRCHECK1">RADRCHECK1.</param>
        /// <param name="RADRCHECK2">RADRCHECK2.</param>
        /// <param name="RADRCHECK3">RADRCHECK3.</param>
        /// <param name="RCARDCHECK">RCARDCHECK.</param>
        /// <param name="CC_LIMITED">CC_LIMITED.</param>
        /// <param name="CC_VERIF_VALUE">CC_VERIF_VALUE.</param>
        /// <param name="CC_CTRL_FIELD">CC_CTRL_FIELD.</param>
        /// <param name="CC_IN_USE_ST">CC_IN_USE_ST.</param>
        public SimulateOrderResponseRootORDERCCARD(string CC_TYPE = default(string), string CC_NUMBER = default(string), string CC_VALID_T = default(string), string CC_NAME = default(string), string BILLAMOUNT = default(string), string AUTH_FLAG = default(string), string AUTHAMOUNT = default(string), string CURRENCY = default(string), string CURR_ISO = default(string), string AUTH_DATE = default(string), string AUTH_TIME = default(string), string AUTH_CC_NO = default(string), string AUTH_REFNO = default(string), string CC_REACT = default(string), string CC_RE_AMOUNT = default(string), string GL_ACCOUNT = default(string), string CC_STAT_EX = default(string), string CC_REACT_T = default(string), string VIRT_CARD = default(string), string MERCHIDCL = default(string), string PRE_AUTH = default(string), string CC_SEQ_NO = default(string), string AMOUNTCHAN = default(string), string AUTHORTYPE = default(string), string DATAORIGIN = default(string), string RADRCHECK1 = default(string), string RADRCHECK2 = default(string), string RADRCHECK3 = default(string), string RCARDCHECK = default(string), string CC_LIMITED = default(string), string CC_VERIF_VALUE = default(string), string CC_CTRL_FIELD = default(string), string CC_IN_USE_ST = default(string))
        {
            this.CC_TYPE = CC_TYPE;
            this.CC_NUMBER = CC_NUMBER;
            this.CC_VALID_T = CC_VALID_T;
            this.CC_NAME = CC_NAME;
            this.BILLAMOUNT = BILLAMOUNT;
            this.AUTH_FLAG = AUTH_FLAG;
            this.AUTHAMOUNT = AUTHAMOUNT;
            this.CURRENCY = CURRENCY;
            this.CURR_ISO = CURR_ISO;
            this.AUTH_DATE = AUTH_DATE;
            this.AUTH_TIME = AUTH_TIME;
            this.AUTH_CC_NO = AUTH_CC_NO;
            this.AUTH_REFNO = AUTH_REFNO;
            this.CC_REACT = CC_REACT;
            this.CC_RE_AMOUNT = CC_RE_AMOUNT;
            this.GL_ACCOUNT = GL_ACCOUNT;
            this.CC_STAT_EX = CC_STAT_EX;
            this.CC_REACT_T = CC_REACT_T;
            this.VIRT_CARD = VIRT_CARD;
            this.MERCHIDCL = MERCHIDCL;
            this.PRE_AUTH = PRE_AUTH;
            this.CC_SEQ_NO = CC_SEQ_NO;
            this.AMOUNTCHAN = AMOUNTCHAN;
            this.AUTHORTYPE = AUTHORTYPE;
            this.DATAORIGIN = DATAORIGIN;
            this.RADRCHECK1 = RADRCHECK1;
            this.RADRCHECK2 = RADRCHECK2;
            this.RADRCHECK3 = RADRCHECK3;
            this.RCARDCHECK = RCARDCHECK;
            this.CC_LIMITED = CC_LIMITED;
            this.CC_VERIF_VALUE = CC_VERIF_VALUE;
            this.CC_CTRL_FIELD = CC_CTRL_FIELD;
            this.CC_IN_USE_ST = CC_IN_USE_ST;
        }
        
        /// <summary>
        /// Gets or Sets CC_TYPE
        /// </summary>
        [DataMember(Name="CC_TYPE", EmitDefaultValue=false)]
        public string CC_TYPE { get; set; }

        /// <summary>
        /// Gets or Sets CC_NUMBER
        /// </summary>
        [DataMember(Name="CC_NUMBER", EmitDefaultValue=false)]
        public string CC_NUMBER { get; set; }

        /// <summary>
        /// Gets or Sets CC_VALID_T
        /// </summary>
        [DataMember(Name="CC_VALID_T", EmitDefaultValue=false)]
        public string CC_VALID_T { get; set; }

        /// <summary>
        /// Gets or Sets CC_NAME
        /// </summary>
        [DataMember(Name="CC_NAME", EmitDefaultValue=false)]
        public string CC_NAME { get; set; }

        /// <summary>
        /// Gets or Sets BILLAMOUNT
        /// </summary>
        [DataMember(Name="BILLAMOUNT", EmitDefaultValue=false)]
        public string BILLAMOUNT { get; set; }

        /// <summary>
        /// Gets or Sets AUTH_FLAG
        /// </summary>
        [DataMember(Name="AUTH_FLAG", EmitDefaultValue=false)]
        public string AUTH_FLAG { get; set; }

        /// <summary>
        /// Gets or Sets AUTHAMOUNT
        /// </summary>
        [DataMember(Name="AUTHAMOUNT", EmitDefaultValue=false)]
        public string AUTHAMOUNT { get; set; }

        /// <summary>
        /// Gets or Sets CURRENCY
        /// </summary>
        [DataMember(Name="CURRENCY", EmitDefaultValue=false)]
        public string CURRENCY { get; set; }

        /// <summary>
        /// Gets or Sets CURR_ISO
        /// </summary>
        [DataMember(Name="CURR_ISO", EmitDefaultValue=false)]
        public string CURR_ISO { get; set; }

        /// <summary>
        /// Gets or Sets AUTH_DATE
        /// </summary>
        [DataMember(Name="AUTH_DATE", EmitDefaultValue=false)]
        public string AUTH_DATE { get; set; }

        /// <summary>
        /// Gets or Sets AUTH_TIME
        /// </summary>
        [DataMember(Name="AUTH_TIME", EmitDefaultValue=false)]
        public string AUTH_TIME { get; set; }

        /// <summary>
        /// Gets or Sets AUTH_CC_NO
        /// </summary>
        [DataMember(Name="AUTH_CC_NO", EmitDefaultValue=false)]
        public string AUTH_CC_NO { get; set; }

        /// <summary>
        /// Gets or Sets AUTH_REFNO
        /// </summary>
        [DataMember(Name="AUTH_REFNO", EmitDefaultValue=false)]
        public string AUTH_REFNO { get; set; }

        /// <summary>
        /// Gets or Sets CC_REACT
        /// </summary>
        [DataMember(Name="CC_REACT", EmitDefaultValue=false)]
        public string CC_REACT { get; set; }

        /// <summary>
        /// Gets or Sets CC_RE_AMOUNT
        /// </summary>
        [DataMember(Name="CC_RE_AMOUNT", EmitDefaultValue=false)]
        public string CC_RE_AMOUNT { get; set; }

        /// <summary>
        /// Gets or Sets GL_ACCOUNT
        /// </summary>
        [DataMember(Name="GL_ACCOUNT", EmitDefaultValue=false)]
        public string GL_ACCOUNT { get; set; }

        /// <summary>
        /// Gets or Sets CC_STAT_EX
        /// </summary>
        [DataMember(Name="CC_STAT_EX", EmitDefaultValue=false)]
        public string CC_STAT_EX { get; set; }

        /// <summary>
        /// Gets or Sets CC_REACT_T
        /// </summary>
        [DataMember(Name="CC_REACT_T", EmitDefaultValue=false)]
        public string CC_REACT_T { get; set; }

        /// <summary>
        /// Gets or Sets VIRT_CARD
        /// </summary>
        [DataMember(Name="VIRT_CARD", EmitDefaultValue=false)]
        public string VIRT_CARD { get; set; }

        /// <summary>
        /// Gets or Sets MERCHIDCL
        /// </summary>
        [DataMember(Name="MERCHIDCL", EmitDefaultValue=false)]
        public string MERCHIDCL { get; set; }

        /// <summary>
        /// Gets or Sets PRE_AUTH
        /// </summary>
        [DataMember(Name="PRE_AUTH", EmitDefaultValue=false)]
        public string PRE_AUTH { get; set; }

        /// <summary>
        /// Gets or Sets CC_SEQ_NO
        /// </summary>
        [DataMember(Name="CC_SEQ_NO", EmitDefaultValue=false)]
        public string CC_SEQ_NO { get; set; }

        /// <summary>
        /// Gets or Sets AMOUNTCHAN
        /// </summary>
        [DataMember(Name="AMOUNTCHAN", EmitDefaultValue=false)]
        public string AMOUNTCHAN { get; set; }

        /// <summary>
        /// Gets or Sets AUTHORTYPE
        /// </summary>
        [DataMember(Name="AUTHORTYPE", EmitDefaultValue=false)]
        public string AUTHORTYPE { get; set; }

        /// <summary>
        /// Gets or Sets DATAORIGIN
        /// </summary>
        [DataMember(Name="DATAORIGIN", EmitDefaultValue=false)]
        public string DATAORIGIN { get; set; }

        /// <summary>
        /// Gets or Sets RADRCHECK1
        /// </summary>
        [DataMember(Name="RADRCHECK1", EmitDefaultValue=false)]
        public string RADRCHECK1 { get; set; }

        /// <summary>
        /// Gets or Sets RADRCHECK2
        /// </summary>
        [DataMember(Name="RADRCHECK2", EmitDefaultValue=false)]
        public string RADRCHECK2 { get; set; }

        /// <summary>
        /// Gets or Sets RADRCHECK3
        /// </summary>
        [DataMember(Name="RADRCHECK3", EmitDefaultValue=false)]
        public string RADRCHECK3 { get; set; }

        /// <summary>
        /// Gets or Sets RCARDCHECK
        /// </summary>
        [DataMember(Name="RCARDCHECK", EmitDefaultValue=false)]
        public string RCARDCHECK { get; set; }

        /// <summary>
        /// Gets or Sets CC_LIMITED
        /// </summary>
        [DataMember(Name="CC_LIMITED", EmitDefaultValue=false)]
        public string CC_LIMITED { get; set; }

        /// <summary>
        /// Gets or Sets CC_VERIF_VALUE
        /// </summary>
        [DataMember(Name="CC_VERIF_VALUE", EmitDefaultValue=false)]
        public string CC_VERIF_VALUE { get; set; }

        /// <summary>
        /// Gets or Sets CC_CTRL_FIELD
        /// </summary>
        [DataMember(Name="CC_CTRL_FIELD", EmitDefaultValue=false)]
        public string CC_CTRL_FIELD { get; set; }

        /// <summary>
        /// Gets or Sets CC_IN_USE_ST
        /// </summary>
        [DataMember(Name="CC_IN_USE_ST", EmitDefaultValue=false)]
        public string CC_IN_USE_ST { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SimulateOrderResponseRootORDERCCARD {\n");
            sb.Append("  CC_TYPE: ").Append(CC_TYPE).Append("\n");
            sb.Append("  CC_NUMBER: ").Append(CC_NUMBER).Append("\n");
            sb.Append("  CC_VALID_T: ").Append(CC_VALID_T).Append("\n");
            sb.Append("  CC_NAME: ").Append(CC_NAME).Append("\n");
            sb.Append("  BILLAMOUNT: ").Append(BILLAMOUNT).Append("\n");
            sb.Append("  AUTH_FLAG: ").Append(AUTH_FLAG).Append("\n");
            sb.Append("  AUTHAMOUNT: ").Append(AUTHAMOUNT).Append("\n");
            sb.Append("  CURRENCY: ").Append(CURRENCY).Append("\n");
            sb.Append("  CURR_ISO: ").Append(CURR_ISO).Append("\n");
            sb.Append("  AUTH_DATE: ").Append(AUTH_DATE).Append("\n");
            sb.Append("  AUTH_TIME: ").Append(AUTH_TIME).Append("\n");
            sb.Append("  AUTH_CC_NO: ").Append(AUTH_CC_NO).Append("\n");
            sb.Append("  AUTH_REFNO: ").Append(AUTH_REFNO).Append("\n");
            sb.Append("  CC_REACT: ").Append(CC_REACT).Append("\n");
            sb.Append("  CC_RE_AMOUNT: ").Append(CC_RE_AMOUNT).Append("\n");
            sb.Append("  GL_ACCOUNT: ").Append(GL_ACCOUNT).Append("\n");
            sb.Append("  CC_STAT_EX: ").Append(CC_STAT_EX).Append("\n");
            sb.Append("  CC_REACT_T: ").Append(CC_REACT_T).Append("\n");
            sb.Append("  VIRT_CARD: ").Append(VIRT_CARD).Append("\n");
            sb.Append("  MERCHIDCL: ").Append(MERCHIDCL).Append("\n");
            sb.Append("  PRE_AUTH: ").Append(PRE_AUTH).Append("\n");
            sb.Append("  CC_SEQ_NO: ").Append(CC_SEQ_NO).Append("\n");
            sb.Append("  AMOUNTCHAN: ").Append(AMOUNTCHAN).Append("\n");
            sb.Append("  AUTHORTYPE: ").Append(AUTHORTYPE).Append("\n");
            sb.Append("  DATAORIGIN: ").Append(DATAORIGIN).Append("\n");
            sb.Append("  RADRCHECK1: ").Append(RADRCHECK1).Append("\n");
            sb.Append("  RADRCHECK2: ").Append(RADRCHECK2).Append("\n");
            sb.Append("  RADRCHECK3: ").Append(RADRCHECK3).Append("\n");
            sb.Append("  RCARDCHECK: ").Append(RCARDCHECK).Append("\n");
            sb.Append("  CC_LIMITED: ").Append(CC_LIMITED).Append("\n");
            sb.Append("  CC_VERIF_VALUE: ").Append(CC_VERIF_VALUE).Append("\n");
            sb.Append("  CC_CTRL_FIELD: ").Append(CC_CTRL_FIELD).Append("\n");
            sb.Append("  CC_IN_USE_ST: ").Append(CC_IN_USE_ST).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SimulateOrderResponseRootORDERCCARD);
        }

        /// <summary>
        /// Returns true if SimulateOrderResponseRootORDERCCARD instances are equal
        /// </summary>
        /// <param name="input">Instance of SimulateOrderResponseRootORDERCCARD to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SimulateOrderResponseRootORDERCCARD input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CC_TYPE == input.CC_TYPE ||
                    (this.CC_TYPE != null &&
                    this.CC_TYPE.Equals(input.CC_TYPE))
                ) && 
                (
                    this.CC_NUMBER == input.CC_NUMBER ||
                    (this.CC_NUMBER != null &&
                    this.CC_NUMBER.Equals(input.CC_NUMBER))
                ) && 
                (
                    this.CC_VALID_T == input.CC_VALID_T ||
                    (this.CC_VALID_T != null &&
                    this.CC_VALID_T.Equals(input.CC_VALID_T))
                ) && 
                (
                    this.CC_NAME == input.CC_NAME ||
                    (this.CC_NAME != null &&
                    this.CC_NAME.Equals(input.CC_NAME))
                ) && 
                (
                    this.BILLAMOUNT == input.BILLAMOUNT ||
                    (this.BILLAMOUNT != null &&
                    this.BILLAMOUNT.Equals(input.BILLAMOUNT))
                ) && 
                (
                    this.AUTH_FLAG == input.AUTH_FLAG ||
                    (this.AUTH_FLAG != null &&
                    this.AUTH_FLAG.Equals(input.AUTH_FLAG))
                ) && 
                (
                    this.AUTHAMOUNT == input.AUTHAMOUNT ||
                    (this.AUTHAMOUNT != null &&
                    this.AUTHAMOUNT.Equals(input.AUTHAMOUNT))
                ) && 
                (
                    this.CURRENCY == input.CURRENCY ||
                    (this.CURRENCY != null &&
                    this.CURRENCY.Equals(input.CURRENCY))
                ) && 
                (
                    this.CURR_ISO == input.CURR_ISO ||
                    (this.CURR_ISO != null &&
                    this.CURR_ISO.Equals(input.CURR_ISO))
                ) && 
                (
                    this.AUTH_DATE == input.AUTH_DATE ||
                    (this.AUTH_DATE != null &&
                    this.AUTH_DATE.Equals(input.AUTH_DATE))
                ) && 
                (
                    this.AUTH_TIME == input.AUTH_TIME ||
                    (this.AUTH_TIME != null &&
                    this.AUTH_TIME.Equals(input.AUTH_TIME))
                ) && 
                (
                    this.AUTH_CC_NO == input.AUTH_CC_NO ||
                    (this.AUTH_CC_NO != null &&
                    this.AUTH_CC_NO.Equals(input.AUTH_CC_NO))
                ) && 
                (
                    this.AUTH_REFNO == input.AUTH_REFNO ||
                    (this.AUTH_REFNO != null &&
                    this.AUTH_REFNO.Equals(input.AUTH_REFNO))
                ) && 
                (
                    this.CC_REACT == input.CC_REACT ||
                    (this.CC_REACT != null &&
                    this.CC_REACT.Equals(input.CC_REACT))
                ) && 
                (
                    this.CC_RE_AMOUNT == input.CC_RE_AMOUNT ||
                    (this.CC_RE_AMOUNT != null &&
                    this.CC_RE_AMOUNT.Equals(input.CC_RE_AMOUNT))
                ) && 
                (
                    this.GL_ACCOUNT == input.GL_ACCOUNT ||
                    (this.GL_ACCOUNT != null &&
                    this.GL_ACCOUNT.Equals(input.GL_ACCOUNT))
                ) && 
                (
                    this.CC_STAT_EX == input.CC_STAT_EX ||
                    (this.CC_STAT_EX != null &&
                    this.CC_STAT_EX.Equals(input.CC_STAT_EX))
                ) && 
                (
                    this.CC_REACT_T == input.CC_REACT_T ||
                    (this.CC_REACT_T != null &&
                    this.CC_REACT_T.Equals(input.CC_REACT_T))
                ) && 
                (
                    this.VIRT_CARD == input.VIRT_CARD ||
                    (this.VIRT_CARD != null &&
                    this.VIRT_CARD.Equals(input.VIRT_CARD))
                ) && 
                (
                    this.MERCHIDCL == input.MERCHIDCL ||
                    (this.MERCHIDCL != null &&
                    this.MERCHIDCL.Equals(input.MERCHIDCL))
                ) && 
                (
                    this.PRE_AUTH == input.PRE_AUTH ||
                    (this.PRE_AUTH != null &&
                    this.PRE_AUTH.Equals(input.PRE_AUTH))
                ) && 
                (
                    this.CC_SEQ_NO == input.CC_SEQ_NO ||
                    (this.CC_SEQ_NO != null &&
                    this.CC_SEQ_NO.Equals(input.CC_SEQ_NO))
                ) && 
                (
                    this.AMOUNTCHAN == input.AMOUNTCHAN ||
                    (this.AMOUNTCHAN != null &&
                    this.AMOUNTCHAN.Equals(input.AMOUNTCHAN))
                ) && 
                (
                    this.AUTHORTYPE == input.AUTHORTYPE ||
                    (this.AUTHORTYPE != null &&
                    this.AUTHORTYPE.Equals(input.AUTHORTYPE))
                ) && 
                (
                    this.DATAORIGIN == input.DATAORIGIN ||
                    (this.DATAORIGIN != null &&
                    this.DATAORIGIN.Equals(input.DATAORIGIN))
                ) && 
                (
                    this.RADRCHECK1 == input.RADRCHECK1 ||
                    (this.RADRCHECK1 != null &&
                    this.RADRCHECK1.Equals(input.RADRCHECK1))
                ) && 
                (
                    this.RADRCHECK2 == input.RADRCHECK2 ||
                    (this.RADRCHECK2 != null &&
                    this.RADRCHECK2.Equals(input.RADRCHECK2))
                ) && 
                (
                    this.RADRCHECK3 == input.RADRCHECK3 ||
                    (this.RADRCHECK3 != null &&
                    this.RADRCHECK3.Equals(input.RADRCHECK3))
                ) && 
                (
                    this.RCARDCHECK == input.RCARDCHECK ||
                    (this.RCARDCHECK != null &&
                    this.RCARDCHECK.Equals(input.RCARDCHECK))
                ) && 
                (
                    this.CC_LIMITED == input.CC_LIMITED ||
                    (this.CC_LIMITED != null &&
                    this.CC_LIMITED.Equals(input.CC_LIMITED))
                ) && 
                (
                    this.CC_VERIF_VALUE == input.CC_VERIF_VALUE ||
                    (this.CC_VERIF_VALUE != null &&
                    this.CC_VERIF_VALUE.Equals(input.CC_VERIF_VALUE))
                ) && 
                (
                    this.CC_CTRL_FIELD == input.CC_CTRL_FIELD ||
                    (this.CC_CTRL_FIELD != null &&
                    this.CC_CTRL_FIELD.Equals(input.CC_CTRL_FIELD))
                ) && 
                (
                    this.CC_IN_USE_ST == input.CC_IN_USE_ST ||
                    (this.CC_IN_USE_ST != null &&
                    this.CC_IN_USE_ST.Equals(input.CC_IN_USE_ST))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CC_TYPE != null)
                    hashCode = hashCode * 59 + this.CC_TYPE.GetHashCode();
                if (this.CC_NUMBER != null)
                    hashCode = hashCode * 59 + this.CC_NUMBER.GetHashCode();
                if (this.CC_VALID_T != null)
                    hashCode = hashCode * 59 + this.CC_VALID_T.GetHashCode();
                if (this.CC_NAME != null)
                    hashCode = hashCode * 59 + this.CC_NAME.GetHashCode();
                if (this.BILLAMOUNT != null)
                    hashCode = hashCode * 59 + this.BILLAMOUNT.GetHashCode();
                if (this.AUTH_FLAG != null)
                    hashCode = hashCode * 59 + this.AUTH_FLAG.GetHashCode();
                if (this.AUTHAMOUNT != null)
                    hashCode = hashCode * 59 + this.AUTHAMOUNT.GetHashCode();
                if (this.CURRENCY != null)
                    hashCode = hashCode * 59 + this.CURRENCY.GetHashCode();
                if (this.CURR_ISO != null)
                    hashCode = hashCode * 59 + this.CURR_ISO.GetHashCode();
                if (this.AUTH_DATE != null)
                    hashCode = hashCode * 59 + this.AUTH_DATE.GetHashCode();
                if (this.AUTH_TIME != null)
                    hashCode = hashCode * 59 + this.AUTH_TIME.GetHashCode();
                if (this.AUTH_CC_NO != null)
                    hashCode = hashCode * 59 + this.AUTH_CC_NO.GetHashCode();
                if (this.AUTH_REFNO != null)
                    hashCode = hashCode * 59 + this.AUTH_REFNO.GetHashCode();
                if (this.CC_REACT != null)
                    hashCode = hashCode * 59 + this.CC_REACT.GetHashCode();
                if (this.CC_RE_AMOUNT != null)
                    hashCode = hashCode * 59 + this.CC_RE_AMOUNT.GetHashCode();
                if (this.GL_ACCOUNT != null)
                    hashCode = hashCode * 59 + this.GL_ACCOUNT.GetHashCode();
                if (this.CC_STAT_EX != null)
                    hashCode = hashCode * 59 + this.CC_STAT_EX.GetHashCode();
                if (this.CC_REACT_T != null)
                    hashCode = hashCode * 59 + this.CC_REACT_T.GetHashCode();
                if (this.VIRT_CARD != null)
                    hashCode = hashCode * 59 + this.VIRT_CARD.GetHashCode();
                if (this.MERCHIDCL != null)
                    hashCode = hashCode * 59 + this.MERCHIDCL.GetHashCode();
                if (this.PRE_AUTH != null)
                    hashCode = hashCode * 59 + this.PRE_AUTH.GetHashCode();
                if (this.CC_SEQ_NO != null)
                    hashCode = hashCode * 59 + this.CC_SEQ_NO.GetHashCode();
                if (this.AMOUNTCHAN != null)
                    hashCode = hashCode * 59 + this.AMOUNTCHAN.GetHashCode();
                if (this.AUTHORTYPE != null)
                    hashCode = hashCode * 59 + this.AUTHORTYPE.GetHashCode();
                if (this.DATAORIGIN != null)
                    hashCode = hashCode * 59 + this.DATAORIGIN.GetHashCode();
                if (this.RADRCHECK1 != null)
                    hashCode = hashCode * 59 + this.RADRCHECK1.GetHashCode();
                if (this.RADRCHECK2 != null)
                    hashCode = hashCode * 59 + this.RADRCHECK2.GetHashCode();
                if (this.RADRCHECK3 != null)
                    hashCode = hashCode * 59 + this.RADRCHECK3.GetHashCode();
                if (this.RCARDCHECK != null)
                    hashCode = hashCode * 59 + this.RCARDCHECK.GetHashCode();
                if (this.CC_LIMITED != null)
                    hashCode = hashCode * 59 + this.CC_LIMITED.GetHashCode();
                if (this.CC_VERIF_VALUE != null)
                    hashCode = hashCode * 59 + this.CC_VERIF_VALUE.GetHashCode();
                if (this.CC_CTRL_FIELD != null)
                    hashCode = hashCode * 59 + this.CC_CTRL_FIELD.GetHashCode();
                if (this.CC_IN_USE_ST != null)
                    hashCode = hashCode * 59 + this.CC_IN_USE_ST.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
