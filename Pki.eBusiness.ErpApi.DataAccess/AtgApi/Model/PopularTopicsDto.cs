/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// PopularTopicsDto
    /// </summary>
    [DataContract]
    public partial class PopularTopicsDto :  IEquatable<PopularTopicsDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PopularTopicsDto" /> class.
        /// </summary>
        /// <param name="Description">Description.</param>
        /// <param name="SeoTitle">SeoTitle.</param>
        /// <param name="Title">Title.</param>
        /// <param name="Topics">Topics.</param>
        /// <param name="SeoAttributes">SeoAttributes.</param>
        /// <param name="SocialShareAttributes">SocialShareAttributes.</param>
        public PopularTopicsDto(string Description = default(string), string SeoTitle = default(string), string Title = default(string), List<TopicDto> Topics = default(List<TopicDto>), SeoAttributesDto SeoAttributes = default(SeoAttributesDto), SocialShareAttributesDto SocialShareAttributes = default(SocialShareAttributesDto))
        {
            this.Description = Description;
            this.SeoTitle = SeoTitle;
            this.Title = Title;
            this.Topics = Topics;
            this.SeoAttributes = SeoAttributes;
            this.SocialShareAttributes = SocialShareAttributes;
        }
        
        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets SeoTitle
        /// </summary>
        [DataMember(Name="seoTitle", EmitDefaultValue=false)]
        public string SeoTitle { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Topics
        /// </summary>
        [DataMember(Name="topics", EmitDefaultValue=false)]
        public List<TopicDto> Topics { get; set; }

        /// <summary>
        /// Gets or Sets SeoAttributes
        /// </summary>
        [DataMember(Name="seoAttributes", EmitDefaultValue=false)]
        public SeoAttributesDto SeoAttributes { get; set; }

        /// <summary>
        /// Gets or Sets SocialShareAttributes
        /// </summary>
        [DataMember(Name="socialShareAttributes", EmitDefaultValue=false)]
        public SocialShareAttributesDto SocialShareAttributes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PopularTopicsDto {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  SeoTitle: ").Append(SeoTitle).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Topics: ").Append(Topics).Append("\n");
            sb.Append("  SeoAttributes: ").Append(SeoAttributes).Append("\n");
            sb.Append("  SocialShareAttributes: ").Append(SocialShareAttributes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PopularTopicsDto);
        }

        /// <summary>
        /// Returns true if PopularTopicsDto instances are equal
        /// </summary>
        /// <param name="input">Instance of PopularTopicsDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PopularTopicsDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.SeoTitle == input.SeoTitle ||
                    (this.SeoTitle != null &&
                    this.SeoTitle.Equals(input.SeoTitle))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Topics == input.Topics ||
                    this.Topics != null &&
                    this.Topics.SequenceEqual(input.Topics)
                ) && 
                (
                    this.SeoAttributes == input.SeoAttributes ||
                    (this.SeoAttributes != null &&
                    this.SeoAttributes.Equals(input.SeoAttributes))
                ) && 
                (
                    this.SocialShareAttributes == input.SocialShareAttributes ||
                    (this.SocialShareAttributes != null &&
                    this.SocialShareAttributes.Equals(input.SocialShareAttributes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.SeoTitle != null)
                    hashCode = hashCode * 59 + this.SeoTitle.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Topics != null)
                    hashCode = hashCode * 59 + this.Topics.GetHashCode();
                if (this.SeoAttributes != null)
                    hashCode = hashCode * 59 + this.SeoAttributes.GetHashCode();
                if (this.SocialShareAttributes != null)
                    hashCode = hashCode * 59 + this.SocialShareAttributes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
