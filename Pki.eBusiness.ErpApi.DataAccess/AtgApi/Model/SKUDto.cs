/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// SKUDto
    /// </summary>
    [DataContract]
    public partial class SKUDto :  IEquatable<SKUDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SKUDto" /> class.
        /// </summary>
        /// <param name="PACCode">PACCode.</param>
        /// <param name="SAPDescription">SAPDescription.</param>
        /// <param name="URL">URL.</param>
        /// <param name="AwardWinner">AwardWinner.</param>
        /// <param name="CertificateOfAnalysisUrl">CertificateOfAnalysisUrl.</param>
        /// <param name="CertificateOfAnalysysSearchTerm">CertificateOfAnalysysSearchTerm.</param>
        /// <param name="Configurations">Configurations.</param>
        /// <param name="Description">Description.</param>
        /// <param name="DisplayOrder">DisplayOrder.</param>
        /// <param name="FeaturesAndBenefits">FeaturesAndBenefits.</param>
        /// <param name="H1TitleTag">H1TitleTag.</param>
        /// <param name="ItemClass">ItemClass.</param>
        /// <param name="Itemclass">Itemclass.</param>
        /// <param name="LongDescription">LongDescription.</param>
        /// <param name="M3dImagePath">M3dImagePath.</param>
        /// <param name="MetaDescription">MetaDescription.</param>
        /// <param name="Name">Name.</param>
        /// <param name="_New">_New.</param>
        /// <param name="PageTitle">PageTitle.</param>
        /// <param name="PartNumber">PartNumber.</param>
        /// <param name="ProductClass">ProductClass.</param>
        /// <param name="ProductLine">ProductLine.</param>
        /// <param name="RadioActive">RadioActive.</param>
        /// <param name="Selected">Selected.</param>
        /// <param name="SkuActive">SkuActive.</param>
        /// <param name="SkuId">SkuId.</param>
        /// <param name="SalesStatus">SalesStatus.</param>
        /// <param name="Images">Images.</param>
        /// <param name="Videos">Videos.</param>
        /// <param name="Tools">Tools.</param>
        /// <param name="Resources">Resources.</param>
        /// <param name="Links">Links.</param>
        /// <param name="AlternateProducts">AlternateProducts.</param>
        /// <param name="WebDisplayableProperties">WebDisplayableProperties.</param>
        /// <param name="Attributes">Attributes.</param>
        /// <param name="AttributeValues">AttributeValues.</param>
        /// <param name="BuyNowLink">BuyNowLink.</param>
        public SKUDto(string PACCode = default(string), string SAPDescription = default(string), string URL = default(string), bool? AwardWinner = default(bool?), string CertificateOfAnalysisUrl = default(string), string CertificateOfAnalysysSearchTerm = default(string), string Configurations = default(string), string Description = default(string), int? DisplayOrder = default(int?), string FeaturesAndBenefits = default(string), string H1TitleTag = default(string), string ItemClass = default(string), string Itemclass = default(string), string LongDescription = default(string), string M3dImagePath = default(string), string MetaDescription = default(string), string Name = default(string), bool? _New = default(bool?), string PageTitle = default(string), string PartNumber = default(string), string ProductClass = default(string), string ProductLine = default(string), string RadioActive = default(string), bool? Selected = default(bool?), bool? SkuActive = default(bool?), string SkuId = default(string), List<AttributesDto> SalesStatus = default(List<AttributesDto>), List<ImageDto> Images = default(List<ImageDto>), List<VideoDto> Videos = default(List<VideoDto>), List<ToolsDto> Tools = default(List<ToolsDto>), List<ContentDto> Resources = default(List<ContentDto>), List<LinkDto> Links = default(List<LinkDto>), List<SKUDto> AlternateProducts = default(List<SKUDto>), List<string> WebDisplayableProperties = default(List<string>), List<AttributesDto> Attributes = default(List<AttributesDto>), List<AttributesDto> AttributeValues = default(List<AttributesDto>), UrlDto BuyNowLink = default(UrlDto))
        {
            this.PACCode = PACCode;
            this.SAPDescription = SAPDescription;
            this.URL = URL;
            this.AwardWinner = AwardWinner;
            this.CertificateOfAnalysisUrl = CertificateOfAnalysisUrl;
            this.CertificateOfAnalysysSearchTerm = CertificateOfAnalysysSearchTerm;
            this.Configurations = Configurations;
            this.Description = Description;
            this.DisplayOrder = DisplayOrder;
            this.FeaturesAndBenefits = FeaturesAndBenefits;
            this.H1TitleTag = H1TitleTag;
            this.ItemClass = ItemClass;
            this.Itemclass = Itemclass;
            this.LongDescription = LongDescription;
            this.M3dImagePath = M3dImagePath;
            this.MetaDescription = MetaDescription;
            this.Name = Name;
            this._New = _New;
            this.PageTitle = PageTitle;
            this.PartNumber = PartNumber;
            this.ProductClass = ProductClass;
            this.ProductLine = ProductLine;
            this.RadioActive = RadioActive;
            this.Selected = Selected;
            this.SkuActive = SkuActive;
            this.SkuId = SkuId;
            this.SalesStatus = SalesStatus;
            this.Images = Images;
            this.Videos = Videos;
            this.Tools = Tools;
            this.Resources = Resources;
            this.Links = Links;
            this.AlternateProducts = AlternateProducts;
            this.WebDisplayableProperties = WebDisplayableProperties;
            this.Attributes = Attributes;
            this.AttributeValues = AttributeValues;
            this.BuyNowLink = BuyNowLink;
        }
        
        /// <summary>
        /// Gets or Sets PACCode
        /// </summary>
        [DataMember(Name="PACCode", EmitDefaultValue=false)]
        public string PACCode { get; set; }

        /// <summary>
        /// Gets or Sets SAPDescription
        /// </summary>
        [DataMember(Name="SAPDescription", EmitDefaultValue=false)]
        public string SAPDescription { get; set; }

        /// <summary>
        /// Gets or Sets URL
        /// </summary>
        [DataMember(Name="URL", EmitDefaultValue=false)]
        public string URL { get; set; }

        /// <summary>
        /// Gets or Sets AwardWinner
        /// </summary>
        [DataMember(Name="awardWinner", EmitDefaultValue=false)]
        public bool? AwardWinner { get; set; }

        /// <summary>
        /// Gets or Sets CertificateOfAnalysisUrl
        /// </summary>
        [DataMember(Name="certificateOfAnalysisUrl", EmitDefaultValue=false)]
        public string CertificateOfAnalysisUrl { get; set; }

        /// <summary>
        /// Gets or Sets CertificateOfAnalysysSearchTerm
        /// </summary>
        [DataMember(Name="certificateOfAnalysysSearchTerm", EmitDefaultValue=false)]
        public string CertificateOfAnalysysSearchTerm { get; set; }

        /// <summary>
        /// Gets or Sets Configurations
        /// </summary>
        [DataMember(Name="configurations", EmitDefaultValue=false)]
        public string Configurations { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DisplayOrder
        /// </summary>
        [DataMember(Name="displayOrder", EmitDefaultValue=false)]
        public int? DisplayOrder { get; set; }

        /// <summary>
        /// Gets or Sets FeaturesAndBenefits
        /// </summary>
        [DataMember(Name="featuresAndBenefits", EmitDefaultValue=false)]
        public string FeaturesAndBenefits { get; set; }

        /// <summary>
        /// Gets or Sets H1TitleTag
        /// </summary>
        [DataMember(Name="h1TitleTag", EmitDefaultValue=false)]
        public string H1TitleTag { get; set; }

        /// <summary>
        /// Gets or Sets ItemClass
        /// </summary>
        [DataMember(Name="itemClass", EmitDefaultValue=false)]
        public string ItemClass { get; set; }

        /// <summary>
        /// Gets or Sets Itemclass
        /// </summary>
        [DataMember(Name="itemclass", EmitDefaultValue=false)]
        public string Itemclass { get; set; }

        /// <summary>
        /// Gets or Sets LongDescription
        /// </summary>
        [DataMember(Name="longDescription", EmitDefaultValue=false)]
        public string LongDescription { get; set; }

        /// <summary>
        /// Gets or Sets M3dImagePath
        /// </summary>
        [DataMember(Name="m3dImagePath", EmitDefaultValue=false)]
        public string M3dImagePath { get; set; }

        /// <summary>
        /// Gets or Sets MetaDescription
        /// </summary>
        [DataMember(Name="metaDescription", EmitDefaultValue=false)]
        public string MetaDescription { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets _New
        /// </summary>
        [DataMember(Name="new", EmitDefaultValue=false)]
        public bool? _New { get; set; }

        /// <summary>
        /// Gets or Sets PageTitle
        /// </summary>
        [DataMember(Name="pageTitle", EmitDefaultValue=false)]
        public string PageTitle { get; set; }

        /// <summary>
        /// Gets or Sets PartNumber
        /// </summary>
        [DataMember(Name="partNumber", EmitDefaultValue=false)]
        public string PartNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProductClass
        /// </summary>
        [DataMember(Name="productClass", EmitDefaultValue=false)]
        public string ProductClass { get; set; }

        /// <summary>
        /// Gets or Sets ProductLine
        /// </summary>
        [DataMember(Name="productLine", EmitDefaultValue=false)]
        public string ProductLine { get; set; }

        /// <summary>
        /// Gets or Sets RadioActive
        /// </summary>
        [DataMember(Name="radioActive", EmitDefaultValue=false)]
        public string RadioActive { get; set; }

        /// <summary>
        /// Gets or Sets Selected
        /// </summary>
        [DataMember(Name="selected", EmitDefaultValue=false)]
        public bool? Selected { get; set; }

        /// <summary>
        /// Gets or Sets SkuActive
        /// </summary>
        [DataMember(Name="skuActive", EmitDefaultValue=false)]
        public bool? SkuActive { get; set; }

        /// <summary>
        /// Gets or Sets SkuId
        /// </summary>
        [DataMember(Name="skuId", EmitDefaultValue=false)]
        public string SkuId { get; set; }

        /// <summary>
        /// Gets or Sets SalesStatus
        /// </summary>
        [DataMember(Name="salesStatus", EmitDefaultValue=false)]
        public List<AttributesDto> SalesStatus { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name="images", EmitDefaultValue=false)]
        public List<ImageDto> Images { get; set; }

        /// <summary>
        /// Gets or Sets Videos
        /// </summary>
        [DataMember(Name="videos", EmitDefaultValue=false)]
        public List<VideoDto> Videos { get; set; }

        /// <summary>
        /// Gets or Sets Tools
        /// </summary>
        [DataMember(Name="tools", EmitDefaultValue=false)]
        public List<ToolsDto> Tools { get; set; }

        /// <summary>
        /// Gets or Sets Resources
        /// </summary>
        [DataMember(Name="resources", EmitDefaultValue=false)]
        public List<ContentDto> Resources { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name="links", EmitDefaultValue=false)]
        public List<LinkDto> Links { get; set; }

        /// <summary>
        /// Gets or Sets AlternateProducts
        /// </summary>
        [DataMember(Name="alternateProducts", EmitDefaultValue=false)]
        public List<SKUDto> AlternateProducts { get; set; }

        /// <summary>
        /// Gets or Sets WebDisplayableProperties
        /// </summary>
        [DataMember(Name="webDisplayableProperties", EmitDefaultValue=false)]
        public List<string> WebDisplayableProperties { get; set; }

        /// <summary>
        /// Gets or Sets Attributes
        /// </summary>
        [DataMember(Name="attributes", EmitDefaultValue=false)]
        public List<AttributesDto> Attributes { get; set; }

        /// <summary>
        /// Gets or Sets AttributeValues
        /// </summary>
        [DataMember(Name="attributeValues", EmitDefaultValue=false)]
        public List<AttributesDto> AttributeValues { get; set; }

        /// <summary>
        /// Gets or Sets BuyNowLink
        /// </summary>
        [DataMember(Name="buyNowLink", EmitDefaultValue=false)]
        public UrlDto BuyNowLink { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SKUDto {\n");
            sb.Append("  PACCode: ").Append(PACCode).Append("\n");
            sb.Append("  SAPDescription: ").Append(SAPDescription).Append("\n");
            sb.Append("  URL: ").Append(URL).Append("\n");
            sb.Append("  AwardWinner: ").Append(AwardWinner).Append("\n");
            sb.Append("  CertificateOfAnalysisUrl: ").Append(CertificateOfAnalysisUrl).Append("\n");
            sb.Append("  CertificateOfAnalysysSearchTerm: ").Append(CertificateOfAnalysysSearchTerm).Append("\n");
            sb.Append("  Configurations: ").Append(Configurations).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DisplayOrder: ").Append(DisplayOrder).Append("\n");
            sb.Append("  FeaturesAndBenefits: ").Append(FeaturesAndBenefits).Append("\n");
            sb.Append("  H1TitleTag: ").Append(H1TitleTag).Append("\n");
            sb.Append("  ItemClass: ").Append(ItemClass).Append("\n");
            sb.Append("  Itemclass: ").Append(Itemclass).Append("\n");
            sb.Append("  LongDescription: ").Append(LongDescription).Append("\n");
            sb.Append("  M3dImagePath: ").Append(M3dImagePath).Append("\n");
            sb.Append("  MetaDescription: ").Append(MetaDescription).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  _New: ").Append(_New).Append("\n");
            sb.Append("  PageTitle: ").Append(PageTitle).Append("\n");
            sb.Append("  PartNumber: ").Append(PartNumber).Append("\n");
            sb.Append("  ProductClass: ").Append(ProductClass).Append("\n");
            sb.Append("  ProductLine: ").Append(ProductLine).Append("\n");
            sb.Append("  RadioActive: ").Append(RadioActive).Append("\n");
            sb.Append("  Selected: ").Append(Selected).Append("\n");
            sb.Append("  SkuActive: ").Append(SkuActive).Append("\n");
            sb.Append("  SkuId: ").Append(SkuId).Append("\n");
            sb.Append("  SalesStatus: ").Append(SalesStatus).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  Videos: ").Append(Videos).Append("\n");
            sb.Append("  Tools: ").Append(Tools).Append("\n");
            sb.Append("  Resources: ").Append(Resources).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  AlternateProducts: ").Append(AlternateProducts).Append("\n");
            sb.Append("  WebDisplayableProperties: ").Append(WebDisplayableProperties).Append("\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("  AttributeValues: ").Append(AttributeValues).Append("\n");
            sb.Append("  BuyNowLink: ").Append(BuyNowLink).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SKUDto);
        }

        /// <summary>
        /// Returns true if SKUDto instances are equal
        /// </summary>
        /// <param name="input">Instance of SKUDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SKUDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PACCode == input.PACCode ||
                    (this.PACCode != null &&
                    this.PACCode.Equals(input.PACCode))
                ) && 
                (
                    this.SAPDescription == input.SAPDescription ||
                    (this.SAPDescription != null &&
                    this.SAPDescription.Equals(input.SAPDescription))
                ) && 
                (
                    this.URL == input.URL ||
                    (this.URL != null &&
                    this.URL.Equals(input.URL))
                ) && 
                (
                    this.AwardWinner == input.AwardWinner ||
                    (this.AwardWinner != null &&
                    this.AwardWinner.Equals(input.AwardWinner))
                ) && 
                (
                    this.CertificateOfAnalysisUrl == input.CertificateOfAnalysisUrl ||
                    (this.CertificateOfAnalysisUrl != null &&
                    this.CertificateOfAnalysisUrl.Equals(input.CertificateOfAnalysisUrl))
                ) && 
                (
                    this.CertificateOfAnalysysSearchTerm == input.CertificateOfAnalysysSearchTerm ||
                    (this.CertificateOfAnalysysSearchTerm != null &&
                    this.CertificateOfAnalysysSearchTerm.Equals(input.CertificateOfAnalysysSearchTerm))
                ) && 
                (
                    this.Configurations == input.Configurations ||
                    (this.Configurations != null &&
                    this.Configurations.Equals(input.Configurations))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.DisplayOrder == input.DisplayOrder ||
                    (this.DisplayOrder != null &&
                    this.DisplayOrder.Equals(input.DisplayOrder))
                ) && 
                (
                    this.FeaturesAndBenefits == input.FeaturesAndBenefits ||
                    (this.FeaturesAndBenefits != null &&
                    this.FeaturesAndBenefits.Equals(input.FeaturesAndBenefits))
                ) && 
                (
                    this.H1TitleTag == input.H1TitleTag ||
                    (this.H1TitleTag != null &&
                    this.H1TitleTag.Equals(input.H1TitleTag))
                ) && 
                (
                    this.ItemClass == input.ItemClass ||
                    (this.ItemClass != null &&
                    this.ItemClass.Equals(input.ItemClass))
                ) && 
                (
                    this.Itemclass == input.Itemclass ||
                    (this.Itemclass != null &&
                    this.Itemclass.Equals(input.Itemclass))
                ) && 
                (
                    this.LongDescription == input.LongDescription ||
                    (this.LongDescription != null &&
                    this.LongDescription.Equals(input.LongDescription))
                ) && 
                (
                    this.M3dImagePath == input.M3dImagePath ||
                    (this.M3dImagePath != null &&
                    this.M3dImagePath.Equals(input.M3dImagePath))
                ) && 
                (
                    this.MetaDescription == input.MetaDescription ||
                    (this.MetaDescription != null &&
                    this.MetaDescription.Equals(input.MetaDescription))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this._New == input._New ||
                    (this._New != null &&
                    this._New.Equals(input._New))
                ) && 
                (
                    this.PageTitle == input.PageTitle ||
                    (this.PageTitle != null &&
                    this.PageTitle.Equals(input.PageTitle))
                ) && 
                (
                    this.PartNumber == input.PartNumber ||
                    (this.PartNumber != null &&
                    this.PartNumber.Equals(input.PartNumber))
                ) && 
                (
                    this.ProductClass == input.ProductClass ||
                    (this.ProductClass != null &&
                    this.ProductClass.Equals(input.ProductClass))
                ) && 
                (
                    this.ProductLine == input.ProductLine ||
                    (this.ProductLine != null &&
                    this.ProductLine.Equals(input.ProductLine))
                ) && 
                (
                    this.RadioActive == input.RadioActive ||
                    (this.RadioActive != null &&
                    this.RadioActive.Equals(input.RadioActive))
                ) && 
                (
                    this.Selected == input.Selected ||
                    (this.Selected != null &&
                    this.Selected.Equals(input.Selected))
                ) && 
                (
                    this.SkuActive == input.SkuActive ||
                    (this.SkuActive != null &&
                    this.SkuActive.Equals(input.SkuActive))
                ) && 
                (
                    this.SkuId == input.SkuId ||
                    (this.SkuId != null &&
                    this.SkuId.Equals(input.SkuId))
                ) && 
                (
                    this.SalesStatus == input.SalesStatus ||
                    this.SalesStatus != null &&
                    this.SalesStatus.SequenceEqual(input.SalesStatus)
                ) && 
                (
                    this.Images == input.Images ||
                    this.Images != null &&
                    this.Images.SequenceEqual(input.Images)
                ) && 
                (
                    this.Videos == input.Videos ||
                    this.Videos != null &&
                    this.Videos.SequenceEqual(input.Videos)
                ) && 
                (
                    this.Tools == input.Tools ||
                    this.Tools != null &&
                    this.Tools.SequenceEqual(input.Tools)
                ) && 
                (
                    this.Resources == input.Resources ||
                    this.Resources != null &&
                    this.Resources.SequenceEqual(input.Resources)
                ) && 
                (
                    this.Links == input.Links ||
                    this.Links != null &&
                    this.Links.SequenceEqual(input.Links)
                ) && 
                (
                    this.AlternateProducts == input.AlternateProducts ||
                    this.AlternateProducts != null &&
                    this.AlternateProducts.SequenceEqual(input.AlternateProducts)
                ) && 
                (
                    this.WebDisplayableProperties == input.WebDisplayableProperties ||
                    this.WebDisplayableProperties != null &&
                    this.WebDisplayableProperties.SequenceEqual(input.WebDisplayableProperties)
                ) && 
                (
                    this.Attributes == input.Attributes ||
                    this.Attributes != null &&
                    this.Attributes.SequenceEqual(input.Attributes)
                ) && 
                (
                    this.AttributeValues == input.AttributeValues ||
                    this.AttributeValues != null &&
                    this.AttributeValues.SequenceEqual(input.AttributeValues)
                ) && 
                (
                    this.BuyNowLink == input.BuyNowLink ||
                    (this.BuyNowLink != null &&
                    this.BuyNowLink.Equals(input.BuyNowLink))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PACCode != null)
                    hashCode = hashCode * 59 + this.PACCode.GetHashCode();
                if (this.SAPDescription != null)
                    hashCode = hashCode * 59 + this.SAPDescription.GetHashCode();
                if (this.URL != null)
                    hashCode = hashCode * 59 + this.URL.GetHashCode();
                if (this.AwardWinner != null)
                    hashCode = hashCode * 59 + this.AwardWinner.GetHashCode();
                if (this.CertificateOfAnalysisUrl != null)
                    hashCode = hashCode * 59 + this.CertificateOfAnalysisUrl.GetHashCode();
                if (this.CertificateOfAnalysysSearchTerm != null)
                    hashCode = hashCode * 59 + this.CertificateOfAnalysysSearchTerm.GetHashCode();
                if (this.Configurations != null)
                    hashCode = hashCode * 59 + this.Configurations.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.DisplayOrder != null)
                    hashCode = hashCode * 59 + this.DisplayOrder.GetHashCode();
                if (this.FeaturesAndBenefits != null)
                    hashCode = hashCode * 59 + this.FeaturesAndBenefits.GetHashCode();
                if (this.H1TitleTag != null)
                    hashCode = hashCode * 59 + this.H1TitleTag.GetHashCode();
                if (this.ItemClass != null)
                    hashCode = hashCode * 59 + this.ItemClass.GetHashCode();
                if (this.Itemclass != null)
                    hashCode = hashCode * 59 + this.Itemclass.GetHashCode();
                if (this.LongDescription != null)
                    hashCode = hashCode * 59 + this.LongDescription.GetHashCode();
                if (this.M3dImagePath != null)
                    hashCode = hashCode * 59 + this.M3dImagePath.GetHashCode();
                if (this.MetaDescription != null)
                    hashCode = hashCode * 59 + this.MetaDescription.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this._New != null)
                    hashCode = hashCode * 59 + this._New.GetHashCode();
                if (this.PageTitle != null)
                    hashCode = hashCode * 59 + this.PageTitle.GetHashCode();
                if (this.PartNumber != null)
                    hashCode = hashCode * 59 + this.PartNumber.GetHashCode();
                if (this.ProductClass != null)
                    hashCode = hashCode * 59 + this.ProductClass.GetHashCode();
                if (this.ProductLine != null)
                    hashCode = hashCode * 59 + this.ProductLine.GetHashCode();
                if (this.RadioActive != null)
                    hashCode = hashCode * 59 + this.RadioActive.GetHashCode();
                if (this.Selected != null)
                    hashCode = hashCode * 59 + this.Selected.GetHashCode();
                if (this.SkuActive != null)
                    hashCode = hashCode * 59 + this.SkuActive.GetHashCode();
                if (this.SkuId != null)
                    hashCode = hashCode * 59 + this.SkuId.GetHashCode();
                if (this.SalesStatus != null)
                    hashCode = hashCode * 59 + this.SalesStatus.GetHashCode();
                if (this.Images != null)
                    hashCode = hashCode * 59 + this.Images.GetHashCode();
                if (this.Videos != null)
                    hashCode = hashCode * 59 + this.Videos.GetHashCode();
                if (this.Tools != null)
                    hashCode = hashCode * 59 + this.Tools.GetHashCode();
                if (this.Resources != null)
                    hashCode = hashCode * 59 + this.Resources.GetHashCode();
                if (this.Links != null)
                    hashCode = hashCode * 59 + this.Links.GetHashCode();
                if (this.AlternateProducts != null)
                    hashCode = hashCode * 59 + this.AlternateProducts.GetHashCode();
                if (this.WebDisplayableProperties != null)
                    hashCode = hashCode * 59 + this.WebDisplayableProperties.GetHashCode();
                if (this.Attributes != null)
                    hashCode = hashCode * 59 + this.Attributes.GetHashCode();
                if (this.AttributeValues != null)
                    hashCode = hashCode * 59 + this.AttributeValues.GetHashCode();
                if (this.BuyNowLink != null)
                    hashCode = hashCode * 59 + this.BuyNowLink.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
