/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// PriceBookDto
    /// </summary>
    [DataContract]
    public partial class PriceBookDto :  IEquatable<PriceBookDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PriceBookDto" /> class.
        /// </summary>
        /// <param name="ContentTab">ContentTab.</param>
        /// <param name="ContentType">ContentType.</param>
        /// <param name="PriceBook">PriceBook.</param>
        /// <param name="SalesType">SalesType.</param>
        public PriceBookDto(string ContentTab = default(string), string ContentType = default(string), string PriceBook = default(string), string SalesType = default(string))
        {
            this.ContentTab = ContentTab;
            this.ContentType = ContentType;
            this.PriceBook = PriceBook;
            this.SalesType = SalesType;
        }
        
        /// <summary>
        /// Gets or Sets ContentTab
        /// </summary>
        [DataMember(Name="contentTab", EmitDefaultValue=false)]
        public string ContentTab { get; set; }

        /// <summary>
        /// Gets or Sets ContentType
        /// </summary>
        [DataMember(Name="contentType", EmitDefaultValue=false)]
        public string ContentType { get; set; }

        /// <summary>
        /// Gets or Sets PriceBook
        /// </summary>
        [DataMember(Name="priceBook", EmitDefaultValue=false)]
        public string PriceBook { get; set; }

        /// <summary>
        /// Gets or Sets SalesType
        /// </summary>
        [DataMember(Name="salesType", EmitDefaultValue=false)]
        public string SalesType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PriceBookDto {\n");
            sb.Append("  ContentTab: ").Append(ContentTab).Append("\n");
            sb.Append("  ContentType: ").Append(ContentType).Append("\n");
            sb.Append("  PriceBook: ").Append(PriceBook).Append("\n");
            sb.Append("  SalesType: ").Append(SalesType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PriceBookDto);
        }

        /// <summary>
        /// Returns true if PriceBookDto instances are equal
        /// </summary>
        /// <param name="input">Instance of PriceBookDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PriceBookDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ContentTab == input.ContentTab ||
                    (this.ContentTab != null &&
                    this.ContentTab.Equals(input.ContentTab))
                ) && 
                (
                    this.ContentType == input.ContentType ||
                    (this.ContentType != null &&
                    this.ContentType.Equals(input.ContentType))
                ) && 
                (
                    this.PriceBook == input.PriceBook ||
                    (this.PriceBook != null &&
                    this.PriceBook.Equals(input.PriceBook))
                ) && 
                (
                    this.SalesType == input.SalesType ||
                    (this.SalesType != null &&
                    this.SalesType.Equals(input.SalesType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContentTab != null)
                    hashCode = hashCode * 59 + this.ContentTab.GetHashCode();
                if (this.ContentType != null)
                    hashCode = hashCode * 59 + this.ContentType.GetHashCode();
                if (this.PriceBook != null)
                    hashCode = hashCode * 59 + this.PriceBook.GetHashCode();
                if (this.SalesType != null)
                    hashCode = hashCode * 59 + this.SalesType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
