/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// ProductDto
    /// </summary>
    [DataContract]
    public partial class ProductDto :  IEquatable<ProductDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductDto" /> class.
        /// </summary>
        /// <param name="URL">URL.</param>
        /// <param name="BusinessUnit">BusinessUnit.</param>
        /// <param name="Description">Description.</param>
        /// <param name="Disclaimer">Disclaimer.</param>
        /// <param name="Id">Id.</param>
        /// <param name="LongDescription">LongDescription.</param>
        /// <param name="MetaDescription">MetaDescription.</param>
        /// <param name="MetaKeyWords">MetaKeyWords.</param>
        /// <param name="Name">Name.</param>
        /// <param name="PrimaryCategoryName">PrimaryCategoryName.</param>
        /// <param name="ProductComparable">ProductComparable.</param>
        /// <param name="ProductComparison">ProductComparison.</param>
        /// <param name="ProductType">ProductType.</param>
        /// <param name="SocialShareDescription">SocialShareDescription.</param>
        /// <param name="SocialShareTitle">SocialShareTitle.</param>
        /// <param name="Type">Type.</param>
        /// <param name="VariesBy1">VariesBy1.</param>
        /// <param name="VariesBy2">VariesBy2.</param>
        /// <param name="VariesBy3">VariesBy3.</param>
        /// <param name="SKUs">SKUs.</param>
        /// <param name="Attributes">Attributes.</param>
        /// <param name="DownloadTrailLink">DownloadTrailLink.</param>
        /// <param name="WebDisplayableProperties">WebDisplayableProperties.</param>
        /// <param name="ResearchAreas">ResearchAreas.</param>
        /// <param name="FaqSections">FaqSections.</param>
        /// <param name="SectionActionButton">SectionActionButton.</param>
        /// <param name="ProductSection">ProductSection.</param>
        public ProductDto(string URL = default(string), string BusinessUnit = default(string), string Description = default(string), string Disclaimer = default(string), string Id = default(string), string LongDescription = default(string), string MetaDescription = default(string), string MetaKeyWords = default(string), string Name = default(string), string PrimaryCategoryName = default(string), bool? ProductComparable = default(bool?), string ProductComparison = default(string), string ProductType = default(string), string SocialShareDescription = default(string), string SocialShareTitle = default(string), string Type = default(string), string VariesBy1 = default(string), string VariesBy2 = default(string), string VariesBy3 = default(string), List<SKUDto> SKUs = default(List<SKUDto>), List<AttributesDto> Attributes = default(List<AttributesDto>), LinkDto DownloadTrailLink = default(LinkDto), List<string> WebDisplayableProperties = default(List<string>), List<string> ResearchAreas = default(List<string>), List<FaqSectionDto> FaqSections = default(List<FaqSectionDto>), CallToActionDto SectionActionButton = default(CallToActionDto), SectionDto ProductSection = default(SectionDto))
        {
            this.URL = URL;
            this.BusinessUnit = BusinessUnit;
            this.Description = Description;
            this.Disclaimer = Disclaimer;
            this.Id = Id;
            this.LongDescription = LongDescription;
            this.MetaDescription = MetaDescription;
            this.MetaKeyWords = MetaKeyWords;
            this.Name = Name;
            this.PrimaryCategoryName = PrimaryCategoryName;
            this.ProductComparable = ProductComparable;
            this.ProductComparison = ProductComparison;
            this.ProductType = ProductType;
            this.SocialShareDescription = SocialShareDescription;
            this.SocialShareTitle = SocialShareTitle;
            this.Type = Type;
            this.VariesBy1 = VariesBy1;
            this.VariesBy2 = VariesBy2;
            this.VariesBy3 = VariesBy3;
            this.SKUs = SKUs;
            this.Attributes = Attributes;
            this.DownloadTrailLink = DownloadTrailLink;
            this.WebDisplayableProperties = WebDisplayableProperties;
            this.ResearchAreas = ResearchAreas;
            this.FaqSections = FaqSections;
            this.SectionActionButton = SectionActionButton;
            this.ProductSection = ProductSection;
        }
        
        /// <summary>
        /// Gets or Sets URL
        /// </summary>
        [DataMember(Name="URL", EmitDefaultValue=false)]
        public string URL { get; set; }

        /// <summary>
        /// Gets or Sets BusinessUnit
        /// </summary>
        [DataMember(Name="businessUnit", EmitDefaultValue=false)]
        public string BusinessUnit { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Disclaimer
        /// </summary>
        [DataMember(Name="disclaimer", EmitDefaultValue=false)]
        public string Disclaimer { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets LongDescription
        /// </summary>
        [DataMember(Name="longDescription", EmitDefaultValue=false)]
        public string LongDescription { get; set; }

        /// <summary>
        /// Gets or Sets MetaDescription
        /// </summary>
        [DataMember(Name="metaDescription", EmitDefaultValue=false)]
        public string MetaDescription { get; set; }

        /// <summary>
        /// Gets or Sets MetaKeyWords
        /// </summary>
        [DataMember(Name="metaKeyWords", EmitDefaultValue=false)]
        public string MetaKeyWords { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryCategoryName
        /// </summary>
        [DataMember(Name="primaryCategoryName", EmitDefaultValue=false)]
        public string PrimaryCategoryName { get; set; }

        /// <summary>
        /// Gets or Sets ProductComparable
        /// </summary>
        [DataMember(Name="productComparable", EmitDefaultValue=false)]
        public bool? ProductComparable { get; set; }

        /// <summary>
        /// Gets or Sets ProductComparison
        /// </summary>
        [DataMember(Name="productComparison", EmitDefaultValue=false)]
        public string ProductComparison { get; set; }

        /// <summary>
        /// Gets or Sets ProductType
        /// </summary>
        [DataMember(Name="productType", EmitDefaultValue=false)]
        public string ProductType { get; set; }

        /// <summary>
        /// Gets or Sets SocialShareDescription
        /// </summary>
        [DataMember(Name="socialShareDescription", EmitDefaultValue=false)]
        public string SocialShareDescription { get; set; }

        /// <summary>
        /// Gets or Sets SocialShareTitle
        /// </summary>
        [DataMember(Name="socialShareTitle", EmitDefaultValue=false)]
        public string SocialShareTitle { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets VariesBy1
        /// </summary>
        [DataMember(Name="variesBy1", EmitDefaultValue=false)]
        public string VariesBy1 { get; set; }

        /// <summary>
        /// Gets or Sets VariesBy2
        /// </summary>
        [DataMember(Name="variesBy2", EmitDefaultValue=false)]
        public string VariesBy2 { get; set; }

        /// <summary>
        /// Gets or Sets VariesBy3
        /// </summary>
        [DataMember(Name="variesBy3", EmitDefaultValue=false)]
        public string VariesBy3 { get; set; }

        /// <summary>
        /// Gets or Sets SKUs
        /// </summary>
        [DataMember(Name="SKUs", EmitDefaultValue=false)]
        public List<SKUDto> SKUs { get; set; }

        /// <summary>
        /// Gets or Sets Attributes
        /// </summary>
        [DataMember(Name="attributes", EmitDefaultValue=false)]
        public List<AttributesDto> Attributes { get; set; }

        /// <summary>
        /// Gets or Sets DownloadTrailLink
        /// </summary>
        [DataMember(Name="downloadTrailLink", EmitDefaultValue=false)]
        public LinkDto DownloadTrailLink { get; set; }

        /// <summary>
        /// Gets or Sets WebDisplayableProperties
        /// </summary>
        [DataMember(Name="webDisplayableProperties", EmitDefaultValue=false)]
        public List<string> WebDisplayableProperties { get; set; }

        /// <summary>
        /// Gets or Sets ResearchAreas
        /// </summary>
        [DataMember(Name="researchAreas", EmitDefaultValue=false)]
        public List<string> ResearchAreas { get; set; }

        /// <summary>
        /// Gets or Sets FaqSections
        /// </summary>
        [DataMember(Name="faqSections", EmitDefaultValue=false)]
        public List<FaqSectionDto> FaqSections { get; set; }

        /// <summary>
        /// Gets or Sets SectionActionButton
        /// </summary>
        [DataMember(Name="sectionActionButton", EmitDefaultValue=false)]
        public CallToActionDto SectionActionButton { get; set; }

        /// <summary>
        /// Gets or Sets ProductSection
        /// </summary>
        [DataMember(Name="productSection", EmitDefaultValue=false)]
        public SectionDto ProductSection { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProductDto {\n");
            sb.Append("  URL: ").Append(URL).Append("\n");
            sb.Append("  BusinessUnit: ").Append(BusinessUnit).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Disclaimer: ").Append(Disclaimer).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LongDescription: ").Append(LongDescription).Append("\n");
            sb.Append("  MetaDescription: ").Append(MetaDescription).Append("\n");
            sb.Append("  MetaKeyWords: ").Append(MetaKeyWords).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PrimaryCategoryName: ").Append(PrimaryCategoryName).Append("\n");
            sb.Append("  ProductComparable: ").Append(ProductComparable).Append("\n");
            sb.Append("  ProductComparison: ").Append(ProductComparison).Append("\n");
            sb.Append("  ProductType: ").Append(ProductType).Append("\n");
            sb.Append("  SocialShareDescription: ").Append(SocialShareDescription).Append("\n");
            sb.Append("  SocialShareTitle: ").Append(SocialShareTitle).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  VariesBy1: ").Append(VariesBy1).Append("\n");
            sb.Append("  VariesBy2: ").Append(VariesBy2).Append("\n");
            sb.Append("  VariesBy3: ").Append(VariesBy3).Append("\n");
            sb.Append("  SKUs: ").Append(SKUs).Append("\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("  DownloadTrailLink: ").Append(DownloadTrailLink).Append("\n");
            sb.Append("  WebDisplayableProperties: ").Append(WebDisplayableProperties).Append("\n");
            sb.Append("  ResearchAreas: ").Append(ResearchAreas).Append("\n");
            sb.Append("  FaqSections: ").Append(FaqSections).Append("\n");
            sb.Append("  SectionActionButton: ").Append(SectionActionButton).Append("\n");
            sb.Append("  ProductSection: ").Append(ProductSection).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProductDto);
        }

        /// <summary>
        /// Returns true if ProductDto instances are equal
        /// </summary>
        /// <param name="input">Instance of ProductDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProductDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.URL == input.URL ||
                    (this.URL != null &&
                    this.URL.Equals(input.URL))
                ) && 
                (
                    this.BusinessUnit == input.BusinessUnit ||
                    (this.BusinessUnit != null &&
                    this.BusinessUnit.Equals(input.BusinessUnit))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Disclaimer == input.Disclaimer ||
                    (this.Disclaimer != null &&
                    this.Disclaimer.Equals(input.Disclaimer))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LongDescription == input.LongDescription ||
                    (this.LongDescription != null &&
                    this.LongDescription.Equals(input.LongDescription))
                ) && 
                (
                    this.MetaDescription == input.MetaDescription ||
                    (this.MetaDescription != null &&
                    this.MetaDescription.Equals(input.MetaDescription))
                ) && 
                (
                    this.MetaKeyWords == input.MetaKeyWords ||
                    (this.MetaKeyWords != null &&
                    this.MetaKeyWords.Equals(input.MetaKeyWords))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.PrimaryCategoryName == input.PrimaryCategoryName ||
                    (this.PrimaryCategoryName != null &&
                    this.PrimaryCategoryName.Equals(input.PrimaryCategoryName))
                ) && 
                (
                    this.ProductComparable == input.ProductComparable ||
                    (this.ProductComparable != null &&
                    this.ProductComparable.Equals(input.ProductComparable))
                ) && 
                (
                    this.ProductComparison == input.ProductComparison ||
                    (this.ProductComparison != null &&
                    this.ProductComparison.Equals(input.ProductComparison))
                ) && 
                (
                    this.ProductType == input.ProductType ||
                    (this.ProductType != null &&
                    this.ProductType.Equals(input.ProductType))
                ) && 
                (
                    this.SocialShareDescription == input.SocialShareDescription ||
                    (this.SocialShareDescription != null &&
                    this.SocialShareDescription.Equals(input.SocialShareDescription))
                ) && 
                (
                    this.SocialShareTitle == input.SocialShareTitle ||
                    (this.SocialShareTitle != null &&
                    this.SocialShareTitle.Equals(input.SocialShareTitle))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.VariesBy1 == input.VariesBy1 ||
                    (this.VariesBy1 != null &&
                    this.VariesBy1.Equals(input.VariesBy1))
                ) && 
                (
                    this.VariesBy2 == input.VariesBy2 ||
                    (this.VariesBy2 != null &&
                    this.VariesBy2.Equals(input.VariesBy2))
                ) && 
                (
                    this.VariesBy3 == input.VariesBy3 ||
                    (this.VariesBy3 != null &&
                    this.VariesBy3.Equals(input.VariesBy3))
                ) && 
                (
                    this.SKUs == input.SKUs ||
                    this.SKUs != null &&
                    this.SKUs.SequenceEqual(input.SKUs)
                ) && 
                (
                    this.Attributes == input.Attributes ||
                    this.Attributes != null &&
                    this.Attributes.SequenceEqual(input.Attributes)
                ) && 
                (
                    this.DownloadTrailLink == input.DownloadTrailLink ||
                    (this.DownloadTrailLink != null &&
                    this.DownloadTrailLink.Equals(input.DownloadTrailLink))
                ) && 
                (
                    this.WebDisplayableProperties == input.WebDisplayableProperties ||
                    this.WebDisplayableProperties != null &&
                    this.WebDisplayableProperties.SequenceEqual(input.WebDisplayableProperties)
                ) && 
                (
                    this.ResearchAreas == input.ResearchAreas ||
                    this.ResearchAreas != null &&
                    this.ResearchAreas.SequenceEqual(input.ResearchAreas)
                ) && 
                (
                    this.FaqSections == input.FaqSections ||
                    this.FaqSections != null &&
                    this.FaqSections.SequenceEqual(input.FaqSections)
                ) && 
                (
                    this.SectionActionButton == input.SectionActionButton ||
                    (this.SectionActionButton != null &&
                    this.SectionActionButton.Equals(input.SectionActionButton))
                ) && 
                (
                    this.ProductSection == input.ProductSection ||
                    (this.ProductSection != null &&
                    this.ProductSection.Equals(input.ProductSection))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.URL != null)
                    hashCode = hashCode * 59 + this.URL.GetHashCode();
                if (this.BusinessUnit != null)
                    hashCode = hashCode * 59 + this.BusinessUnit.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Disclaimer != null)
                    hashCode = hashCode * 59 + this.Disclaimer.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.LongDescription != null)
                    hashCode = hashCode * 59 + this.LongDescription.GetHashCode();
                if (this.MetaDescription != null)
                    hashCode = hashCode * 59 + this.MetaDescription.GetHashCode();
                if (this.MetaKeyWords != null)
                    hashCode = hashCode * 59 + this.MetaKeyWords.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.PrimaryCategoryName != null)
                    hashCode = hashCode * 59 + this.PrimaryCategoryName.GetHashCode();
                if (this.ProductComparable != null)
                    hashCode = hashCode * 59 + this.ProductComparable.GetHashCode();
                if (this.ProductComparison != null)
                    hashCode = hashCode * 59 + this.ProductComparison.GetHashCode();
                if (this.ProductType != null)
                    hashCode = hashCode * 59 + this.ProductType.GetHashCode();
                if (this.SocialShareDescription != null)
                    hashCode = hashCode * 59 + this.SocialShareDescription.GetHashCode();
                if (this.SocialShareTitle != null)
                    hashCode = hashCode * 59 + this.SocialShareTitle.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.VariesBy1 != null)
                    hashCode = hashCode * 59 + this.VariesBy1.GetHashCode();
                if (this.VariesBy2 != null)
                    hashCode = hashCode * 59 + this.VariesBy2.GetHashCode();
                if (this.VariesBy3 != null)
                    hashCode = hashCode * 59 + this.VariesBy3.GetHashCode();
                if (this.SKUs != null)
                    hashCode = hashCode * 59 + this.SKUs.GetHashCode();
                if (this.Attributes != null)
                    hashCode = hashCode * 59 + this.Attributes.GetHashCode();
                if (this.DownloadTrailLink != null)
                    hashCode = hashCode * 59 + this.DownloadTrailLink.GetHashCode();
                if (this.WebDisplayableProperties != null)
                    hashCode = hashCode * 59 + this.WebDisplayableProperties.GetHashCode();
                if (this.ResearchAreas != null)
                    hashCode = hashCode * 59 + this.ResearchAreas.GetHashCode();
                if (this.FaqSections != null)
                    hashCode = hashCode * 59 + this.FaqSections.GetHashCode();
                if (this.SectionActionButton != null)
                    hashCode = hashCode * 59 + this.SectionActionButton.GetHashCode();
                if (this.ProductSection != null)
                    hashCode = hashCode * 59 + this.ProductSection.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
