/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// TierApproverDetailsDto
    /// </summary>
    [DataContract]
    public partial class TierApproverDetailsDto :  IEquatable<TierApproverDetailsDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TierApproverDetailsDto" /> class.
        /// </summary>
        /// <param name="ApprovalStatus">ApprovalStatus.</param>
        /// <param name="ApproverId">ApproverId.</param>
        /// <param name="Tier">Tier.</param>
        public TierApproverDetailsDto(int? ApprovalStatus = default(int?), string ApproverId = default(string), int? Tier = default(int?))
        {
            this.ApprovalStatus = ApprovalStatus;
            this.ApproverId = ApproverId;
            this.Tier = Tier;
        }
        
        /// <summary>
        /// Gets or Sets ApprovalStatus
        /// </summary>
        [DataMember(Name="approvalStatus", EmitDefaultValue=false)]
        public int? ApprovalStatus { get; set; }

        /// <summary>
        /// Gets or Sets ApproverId
        /// </summary>
        [DataMember(Name="approverId", EmitDefaultValue=false)]
        public string ApproverId { get; set; }

        /// <summary>
        /// Gets or Sets Tier
        /// </summary>
        [DataMember(Name="tier", EmitDefaultValue=false)]
        public int? Tier { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TierApproverDetailsDto {\n");
            sb.Append("  ApprovalStatus: ").Append(ApprovalStatus).Append("\n");
            sb.Append("  ApproverId: ").Append(ApproverId).Append("\n");
            sb.Append("  Tier: ").Append(Tier).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TierApproverDetailsDto);
        }

        /// <summary>
        /// Returns true if TierApproverDetailsDto instances are equal
        /// </summary>
        /// <param name="input">Instance of TierApproverDetailsDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TierApproverDetailsDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApprovalStatus == input.ApprovalStatus ||
                    (this.ApprovalStatus != null &&
                    this.ApprovalStatus.Equals(input.ApprovalStatus))
                ) && 
                (
                    this.ApproverId == input.ApproverId ||
                    (this.ApproverId != null &&
                    this.ApproverId.Equals(input.ApproverId))
                ) && 
                (
                    this.Tier == input.Tier ||
                    (this.Tier != null &&
                    this.Tier.Equals(input.Tier))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApprovalStatus != null)
                    hashCode = hashCode * 59 + this.ApprovalStatus.GetHashCode();
                if (this.ApproverId != null)
                    hashCode = hashCode * 59 + this.ApproverId.GetHashCode();
                if (this.Tier != null)
                    hashCode = hashCode * 59 + this.Tier.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
