/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// AccountFlagsDto
    /// </summary>
    [DataContract]
    public partial class AccountFlagsDto :  IEquatable<AccountFlagsDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountFlagsDto" /> class.
        /// </summary>
        /// <param name="AccountNumber">AccountNumber.</param>
        /// <param name="AdditionalEmailNotification">AdditionalEmailNotification.</param>
        /// <param name="BillAttention">BillAttention.</param>
        /// <param name="BillAttentionPreText">BillAttentionPreText.</param>
        /// <param name="InternalDeliveryInstr">InternalDeliveryInstr.</param>
        /// <param name="ShipAttention">ShipAttention.</param>
        /// <param name="ShipAttentionPreText">ShipAttentionPreText.</param>
        public AccountFlagsDto(string AccountNumber = default(string), bool? AdditionalEmailNotification = default(bool?), bool? BillAttention = default(bool?), string BillAttentionPreText = default(string), bool? InternalDeliveryInstr = default(bool?), bool? ShipAttention = default(bool?), string ShipAttentionPreText = default(string))
        {
            this.AccountNumber = AccountNumber;
            this.AdditionalEmailNotification = AdditionalEmailNotification;
            this.BillAttention = BillAttention;
            this.BillAttentionPreText = BillAttentionPreText;
            this.InternalDeliveryInstr = InternalDeliveryInstr;
            this.ShipAttention = ShipAttention;
            this.ShipAttentionPreText = ShipAttentionPreText;
        }
        
        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="accountNumber", EmitDefaultValue=false)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalEmailNotification
        /// </summary>
        [DataMember(Name="additionalEmailNotification", EmitDefaultValue=false)]
        public bool? AdditionalEmailNotification { get; set; }

        /// <summary>
        /// Gets or Sets BillAttention
        /// </summary>
        [DataMember(Name="billAttention", EmitDefaultValue=false)]
        public bool? BillAttention { get; set; }

        /// <summary>
        /// Gets or Sets BillAttentionPreText
        /// </summary>
        [DataMember(Name="billAttentionPreText", EmitDefaultValue=false)]
        public string BillAttentionPreText { get; set; }

        /// <summary>
        /// Gets or Sets InternalDeliveryInstr
        /// </summary>
        [DataMember(Name="internalDeliveryInstr", EmitDefaultValue=false)]
        public bool? InternalDeliveryInstr { get; set; }

        /// <summary>
        /// Gets or Sets ShipAttention
        /// </summary>
        [DataMember(Name="shipAttention", EmitDefaultValue=false)]
        public bool? ShipAttention { get; set; }

        /// <summary>
        /// Gets or Sets ShipAttentionPreText
        /// </summary>
        [DataMember(Name="shipAttentionPreText", EmitDefaultValue=false)]
        public string ShipAttentionPreText { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AccountFlagsDto {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  AdditionalEmailNotification: ").Append(AdditionalEmailNotification).Append("\n");
            sb.Append("  BillAttention: ").Append(BillAttention).Append("\n");
            sb.Append("  BillAttentionPreText: ").Append(BillAttentionPreText).Append("\n");
            sb.Append("  InternalDeliveryInstr: ").Append(InternalDeliveryInstr).Append("\n");
            sb.Append("  ShipAttention: ").Append(ShipAttention).Append("\n");
            sb.Append("  ShipAttentionPreText: ").Append(ShipAttentionPreText).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountFlagsDto);
        }

        /// <summary>
        /// Returns true if AccountFlagsDto instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountFlagsDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountFlagsDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.AdditionalEmailNotification == input.AdditionalEmailNotification ||
                    (this.AdditionalEmailNotification != null &&
                    this.AdditionalEmailNotification.Equals(input.AdditionalEmailNotification))
                ) && 
                (
                    this.BillAttention == input.BillAttention ||
                    (this.BillAttention != null &&
                    this.BillAttention.Equals(input.BillAttention))
                ) && 
                (
                    this.BillAttentionPreText == input.BillAttentionPreText ||
                    (this.BillAttentionPreText != null &&
                    this.BillAttentionPreText.Equals(input.BillAttentionPreText))
                ) && 
                (
                    this.InternalDeliveryInstr == input.InternalDeliveryInstr ||
                    (this.InternalDeliveryInstr != null &&
                    this.InternalDeliveryInstr.Equals(input.InternalDeliveryInstr))
                ) && 
                (
                    this.ShipAttention == input.ShipAttention ||
                    (this.ShipAttention != null &&
                    this.ShipAttention.Equals(input.ShipAttention))
                ) && 
                (
                    this.ShipAttentionPreText == input.ShipAttentionPreText ||
                    (this.ShipAttentionPreText != null &&
                    this.ShipAttentionPreText.Equals(input.ShipAttentionPreText))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.AdditionalEmailNotification != null)
                    hashCode = hashCode * 59 + this.AdditionalEmailNotification.GetHashCode();
                if (this.BillAttention != null)
                    hashCode = hashCode * 59 + this.BillAttention.GetHashCode();
                if (this.BillAttentionPreText != null)
                    hashCode = hashCode * 59 + this.BillAttentionPreText.GetHashCode();
                if (this.InternalDeliveryInstr != null)
                    hashCode = hashCode * 59 + this.InternalDeliveryInstr.GetHashCode();
                if (this.ShipAttention != null)
                    hashCode = hashCode * 59 + this.ShipAttention.GetHashCode();
                if (this.ShipAttentionPreText != null)
                    hashCode = hashCode * 59 + this.ShipAttentionPreText.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
