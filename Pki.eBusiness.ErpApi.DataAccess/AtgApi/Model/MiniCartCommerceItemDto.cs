/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// MiniCartCommerceItemDto
    /// </summary>
    [DataContract]
    public partial class MiniCartCommerceItemDto :  IEquatable<MiniCartCommerceItemDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MiniCartCommerceItemDto" /> class.
        /// </summary>
        /// <param name="PartNumber">PartNumber.</param>
        /// <param name="Quantity">Quantity.</param>
        /// <param name="ShipASAP">ShipASAP.</param>
        /// <param name="ShipmentDate">ShipmentDate.</param>
        /// <param name="ItemPrice">ItemPrice.</param>
        /// <param name="ItemDetail">ItemDetail.</param>
        public MiniCartCommerceItemDto(string PartNumber = default(string), long? Quantity = default(long?), int? ShipASAP = default(int?), DateTime? ShipmentDate = default(DateTime?), MiniCartItemPriceDto ItemPrice = default(MiniCartItemPriceDto), MiniCartItemDetailDto ItemDetail = default(MiniCartItemDetailDto))
        {
            this.PartNumber = PartNumber;
            this.Quantity = Quantity;
            this.ShipASAP = ShipASAP;
            this.ShipmentDate = ShipmentDate;
            this.ItemPrice = ItemPrice;
            this.ItemDetail = ItemDetail;
        }
        
        /// <summary>
        /// Gets or Sets PartNumber
        /// </summary>
        [DataMember(Name="partNumber", EmitDefaultValue=false)]
        public string PartNumber { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name="quantity", EmitDefaultValue=false)]
        public long? Quantity { get; set; }

        /// <summary>
        /// Gets or Sets ShipASAP
        /// </summary>
        [DataMember(Name="shipASAP", EmitDefaultValue=false)]
        public int? ShipASAP { get; set; }

        /// <summary>
        /// Gets or Sets ShipmentDate
        /// </summary>
        [DataMember(Name="shipmentDate", EmitDefaultValue=false)]
        public DateTime? ShipmentDate { get; set; }

        /// <summary>
        /// Gets or Sets ItemPrice
        /// </summary>
        [DataMember(Name="itemPrice", EmitDefaultValue=false)]
        public MiniCartItemPriceDto ItemPrice { get; set; }

        /// <summary>
        /// Gets or Sets ItemDetail
        /// </summary>
        [DataMember(Name="itemDetail", EmitDefaultValue=false)]
        public MiniCartItemDetailDto ItemDetail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MiniCartCommerceItemDto {\n");
            sb.Append("  PartNumber: ").Append(PartNumber).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  ShipASAP: ").Append(ShipASAP).Append("\n");
            sb.Append("  ShipmentDate: ").Append(ShipmentDate).Append("\n");
            sb.Append("  ItemPrice: ").Append(ItemPrice).Append("\n");
            sb.Append("  ItemDetail: ").Append(ItemDetail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MiniCartCommerceItemDto);
        }

        /// <summary>
        /// Returns true if MiniCartCommerceItemDto instances are equal
        /// </summary>
        /// <param name="input">Instance of MiniCartCommerceItemDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MiniCartCommerceItemDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PartNumber == input.PartNumber ||
                    (this.PartNumber != null &&
                    this.PartNumber.Equals(input.PartNumber))
                ) && 
                (
                    this.Quantity == input.Quantity ||
                    (this.Quantity != null &&
                    this.Quantity.Equals(input.Quantity))
                ) && 
                (
                    this.ShipASAP == input.ShipASAP ||
                    (this.ShipASAP != null &&
                    this.ShipASAP.Equals(input.ShipASAP))
                ) && 
                (
                    this.ShipmentDate == input.ShipmentDate ||
                    (this.ShipmentDate != null &&
                    this.ShipmentDate.Equals(input.ShipmentDate))
                ) && 
                (
                    this.ItemPrice == input.ItemPrice ||
                    (this.ItemPrice != null &&
                    this.ItemPrice.Equals(input.ItemPrice))
                ) && 
                (
                    this.ItemDetail == input.ItemDetail ||
                    (this.ItemDetail != null &&
                    this.ItemDetail.Equals(input.ItemDetail))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PartNumber != null)
                    hashCode = hashCode * 59 + this.PartNumber.GetHashCode();
                if (this.Quantity != null)
                    hashCode = hashCode * 59 + this.Quantity.GetHashCode();
                if (this.ShipASAP != null)
                    hashCode = hashCode * 59 + this.ShipASAP.GetHashCode();
                if (this.ShipmentDate != null)
                    hashCode = hashCode * 59 + this.ShipmentDate.GetHashCode();
                if (this.ItemPrice != null)
                    hashCode = hashCode * 59 + this.ItemPrice.GetHashCode();
                if (this.ItemDetail != null)
                    hashCode = hashCode * 59 + this.ItemDetail.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
