/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// ShippingNotificationLineItemDto
    /// </summary>
    [DataContract]
    public partial class ShippingNotificationLineItemDto :  IEquatable<ShippingNotificationLineItemDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShippingNotificationLineItemDto" /> class.
        /// </summary>
        /// <param name="Carrier">Carrier.</param>
        /// <param name="Description">Description.</param>
        /// <param name="PartNumber">PartNumber.</param>
        /// <param name="QuantityOrdered">QuantityOrdered.</param>
        /// <param name="QuantityShipped">QuantityShipped.</param>
        /// <param name="SapLineOrderNo">SapLineOrderNo.</param>
        /// <param name="ShipDate">ShipDate.</param>
        /// <param name="TrackingNO">TrackingNO.</param>
        public ShippingNotificationLineItemDto(string Carrier = default(string), string Description = default(string), string PartNumber = default(string), int? QuantityOrdered = default(int?), int? QuantityShipped = default(int?), int? SapLineOrderNo = default(int?), string ShipDate = default(string), string TrackingNO = default(string))
        {
            this.Carrier = Carrier;
            this.Description = Description;
            this.PartNumber = PartNumber;
            this.QuantityOrdered = QuantityOrdered;
            this.QuantityShipped = QuantityShipped;
            this.SapLineOrderNo = SapLineOrderNo;
            this.ShipDate = ShipDate;
            this.TrackingNO = TrackingNO;
        }
        
        /// <summary>
        /// Gets or Sets Carrier
        /// </summary>
        [DataMember(Name="carrier", EmitDefaultValue=false)]
        public string Carrier { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets PartNumber
        /// </summary>
        [DataMember(Name="partNumber", EmitDefaultValue=false)]
        public string PartNumber { get; set; }

        /// <summary>
        /// Gets or Sets QuantityOrdered
        /// </summary>
        [DataMember(Name="quantityOrdered", EmitDefaultValue=false)]
        public int? QuantityOrdered { get; set; }

        /// <summary>
        /// Gets or Sets QuantityShipped
        /// </summary>
        [DataMember(Name="quantityShipped", EmitDefaultValue=false)]
        public int? QuantityShipped { get; set; }

        /// <summary>
        /// Gets or Sets SapLineOrderNo
        /// </summary>
        [DataMember(Name="sapLineOrderNo", EmitDefaultValue=false)]
        public int? SapLineOrderNo { get; set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="shipDate", EmitDefaultValue=false)]
        public string ShipDate { get; set; }

        /// <summary>
        /// Gets or Sets TrackingNO
        /// </summary>
        [DataMember(Name="trackingNO", EmitDefaultValue=false)]
        public string TrackingNO { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ShippingNotificationLineItemDto {\n");
            sb.Append("  Carrier: ").Append(Carrier).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  PartNumber: ").Append(PartNumber).Append("\n");
            sb.Append("  QuantityOrdered: ").Append(QuantityOrdered).Append("\n");
            sb.Append("  QuantityShipped: ").Append(QuantityShipped).Append("\n");
            sb.Append("  SapLineOrderNo: ").Append(SapLineOrderNo).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  TrackingNO: ").Append(TrackingNO).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShippingNotificationLineItemDto);
        }

        /// <summary>
        /// Returns true if ShippingNotificationLineItemDto instances are equal
        /// </summary>
        /// <param name="input">Instance of ShippingNotificationLineItemDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShippingNotificationLineItemDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Carrier == input.Carrier ||
                    (this.Carrier != null &&
                    this.Carrier.Equals(input.Carrier))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.PartNumber == input.PartNumber ||
                    (this.PartNumber != null &&
                    this.PartNumber.Equals(input.PartNumber))
                ) && 
                (
                    this.QuantityOrdered == input.QuantityOrdered ||
                    (this.QuantityOrdered != null &&
                    this.QuantityOrdered.Equals(input.QuantityOrdered))
                ) && 
                (
                    this.QuantityShipped == input.QuantityShipped ||
                    (this.QuantityShipped != null &&
                    this.QuantityShipped.Equals(input.QuantityShipped))
                ) && 
                (
                    this.SapLineOrderNo == input.SapLineOrderNo ||
                    (this.SapLineOrderNo != null &&
                    this.SapLineOrderNo.Equals(input.SapLineOrderNo))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                ) && 
                (
                    this.TrackingNO == input.TrackingNO ||
                    (this.TrackingNO != null &&
                    this.TrackingNO.Equals(input.TrackingNO))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Carrier != null)
                    hashCode = hashCode * 59 + this.Carrier.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.PartNumber != null)
                    hashCode = hashCode * 59 + this.PartNumber.GetHashCode();
                if (this.QuantityOrdered != null)
                    hashCode = hashCode * 59 + this.QuantityOrdered.GetHashCode();
                if (this.QuantityShipped != null)
                    hashCode = hashCode * 59 + this.QuantityShipped.GetHashCode();
                if (this.SapLineOrderNo != null)
                    hashCode = hashCode * 59 + this.SapLineOrderNo.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                if (this.TrackingNO != null)
                    hashCode = hashCode * 59 + this.TrackingNO.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
