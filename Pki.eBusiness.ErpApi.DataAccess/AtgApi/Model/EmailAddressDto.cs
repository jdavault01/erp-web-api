/* 
 * ATG Store
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.Model
{
    /// <summary>
    /// EmailAddressDto
    /// </summary>
    [DataContract]
    public partial class EmailAddressDto :  IEquatable<EmailAddressDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmailAddressDto" /> class.
        /// </summary>
        /// <param name="EmailAddress">EmailAddress.</param>
        /// <param name="AccountNumber">AccountNumber.</param>
        /// <param name="Id">Id.</param>
        /// <param name="OrderConfirmation">OrderConfirmation.</param>
        /// <param name="ShippingNotification">ShippingNotification.</param>
        public EmailAddressDto(string EmailAddress = default(string), string AccountNumber = default(string), string Id = default(string), bool? OrderConfirmation = default(bool?), bool? ShippingNotification = default(bool?))
        {
            this.EmailAddress = EmailAddress;
            this.AccountNumber = AccountNumber;
            this.Id = Id;
            this.OrderConfirmation = OrderConfirmation;
            this.ShippingNotification = ShippingNotification;
        }
        
        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress", EmitDefaultValue=false)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="accountNumber", EmitDefaultValue=false)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets OrderConfirmation
        /// </summary>
        [DataMember(Name="orderConfirmation", EmitDefaultValue=false)]
        public bool? OrderConfirmation { get; set; }

        /// <summary>
        /// Gets or Sets ShippingNotification
        /// </summary>
        [DataMember(Name="shippingNotification", EmitDefaultValue=false)]
        public bool? ShippingNotification { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailAddressDto {\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OrderConfirmation: ").Append(OrderConfirmation).Append("\n");
            sb.Append("  ShippingNotification: ").Append(ShippingNotification).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EmailAddressDto);
        }

        /// <summary>
        /// Returns true if EmailAddressDto instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailAddressDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailAddressDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EmailAddress == input.EmailAddress ||
                    (this.EmailAddress != null &&
                    this.EmailAddress.Equals(input.EmailAddress))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.OrderConfirmation == input.OrderConfirmation ||
                    (this.OrderConfirmation != null &&
                    this.OrderConfirmation.Equals(input.OrderConfirmation))
                ) && 
                (
                    this.ShippingNotification == input.ShippingNotification ||
                    (this.ShippingNotification != null &&
                    this.ShippingNotification.Equals(input.ShippingNotification))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EmailAddress != null)
                    hashCode = hashCode * 59 + this.EmailAddress.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.OrderConfirmation != null)
                    hashCode = hashCode * 59 + this.OrderConfirmation.GetHashCode();
                if (this.ShippingNotification != null)
                    hashCode = hashCode * 59 + this.ShippingNotification.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
