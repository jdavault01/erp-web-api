/* 
 * eCommerce
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Pki.eBusiness.ErpApi.DataAccess.ErpApi.Model
{
    /// <summary>
    /// SimulateOrderResponseRootEXTENSIONIN
    /// </summary>
    
    public partial class SimulateOrderResponseRootEXTENSIONIN :  IEquatable<SimulateOrderResponseRootEXTENSIONIN>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimulateOrderResponseRootEXTENSIONIN" /> class.
        /// </summary>
        /// <param name="STRUCTURE">STRUCTURE.</param>
        /// <param name="VALUEPART1">VALUEPART1.</param>
        /// <param name="VALUEPART2">VALUEPART2.</param>
        /// <param name="VALUEPART3">VALUEPART3.</param>
        /// <param name="VALUEPART4">VALUEPART4.</param>
        public SimulateOrderResponseRootEXTENSIONIN(string STRUCTURE = default(string), string VALUEPART1 = default(string), string VALUEPART2 = default(string), string VALUEPART3 = default(string), string VALUEPART4 = default(string))
        {
            this.STRUCTURE = STRUCTURE;
            this.VALUEPART1 = VALUEPART1;
            this.VALUEPART2 = VALUEPART2;
            this.VALUEPART3 = VALUEPART3;
            this.VALUEPART4 = VALUEPART4;
        }
        
        /// <summary>
        /// Gets or Sets STRUCTURE
        /// </summary>
        [DataMember(Name="STRUCTURE", EmitDefaultValue=false)]
        public string STRUCTURE { get; set; }

        /// <summary>
        /// Gets or Sets VALUEPART1
        /// </summary>
        [DataMember(Name="VALUEPART1", EmitDefaultValue=false)]
        public string VALUEPART1 { get; set; }

        /// <summary>
        /// Gets or Sets VALUEPART2
        /// </summary>
        [DataMember(Name="VALUEPART2", EmitDefaultValue=false)]
        public string VALUEPART2 { get; set; }

        /// <summary>
        /// Gets or Sets VALUEPART3
        /// </summary>
        [DataMember(Name="VALUEPART3", EmitDefaultValue=false)]
        public string VALUEPART3 { get; set; }

        /// <summary>
        /// Gets or Sets VALUEPART4
        /// </summary>
        [DataMember(Name="VALUEPART4", EmitDefaultValue=false)]
        public string VALUEPART4 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SimulateOrderResponseRootEXTENSIONIN {\n");
            sb.Append("  STRUCTURE: ").Append(STRUCTURE).Append("\n");
            sb.Append("  VALUEPART1: ").Append(VALUEPART1).Append("\n");
            sb.Append("  VALUEPART2: ").Append(VALUEPART2).Append("\n");
            sb.Append("  VALUEPART3: ").Append(VALUEPART3).Append("\n");
            sb.Append("  VALUEPART4: ").Append(VALUEPART4).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SimulateOrderResponseRootEXTENSIONIN);
        }

        /// <summary>
        /// Returns true if SimulateOrderResponseRootEXTENSIONIN instances are equal
        /// </summary>
        /// <param name="input">Instance of SimulateOrderResponseRootEXTENSIONIN to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SimulateOrderResponseRootEXTENSIONIN input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.STRUCTURE == input.STRUCTURE ||
                    (this.STRUCTURE != null &&
                    this.STRUCTURE.Equals(input.STRUCTURE))
                ) && 
                (
                    this.VALUEPART1 == input.VALUEPART1 ||
                    (this.VALUEPART1 != null &&
                    this.VALUEPART1.Equals(input.VALUEPART1))
                ) && 
                (
                    this.VALUEPART2 == input.VALUEPART2 ||
                    (this.VALUEPART2 != null &&
                    this.VALUEPART2.Equals(input.VALUEPART2))
                ) && 
                (
                    this.VALUEPART3 == input.VALUEPART3 ||
                    (this.VALUEPART3 != null &&
                    this.VALUEPART3.Equals(input.VALUEPART3))
                ) && 
                (
                    this.VALUEPART4 == input.VALUEPART4 ||
                    (this.VALUEPART4 != null &&
                    this.VALUEPART4.Equals(input.VALUEPART4))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.STRUCTURE != null)
                    hashCode = hashCode * 59 + this.STRUCTURE.GetHashCode();
                if (this.VALUEPART1 != null)
                    hashCode = hashCode * 59 + this.VALUEPART1.GetHashCode();
                if (this.VALUEPART2 != null)
                    hashCode = hashCode * 59 + this.VALUEPART2.GetHashCode();
                if (this.VALUEPART3 != null)
                    hashCode = hashCode * 59 + this.VALUEPART3.GetHashCode();
                if (this.VALUEPART4 != null)
                    hashCode = hashCode * 59 + this.VALUEPART4.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
