/* 
 * eCommerce
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Pki.eBusiness.ErpApi.DataAccess.ErpApi.Client.SwaggerDateConverter;

namespace Pki.eBusiness.ErpApi.DataAccess.ErpApi.Model
{
    /// <summary>
    /// SimulateOrderResponseRootORDERINCOMPLETE
    /// </summary>
    [DataContract]
    public partial class SimulateOrderResponseRootORDERINCOMPLETE :  IEquatable<SimulateOrderResponseRootORDERINCOMPLETE>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimulateOrderResponseRootORDERINCOMPLETE" /> class.
        /// </summary>
        /// <param name="DOC_NUMBER">DOC_NUMBER.</param>
        /// <param name="ITM_NUMBER">ITM_NUMBER.</param>
        /// <param name="SCHED_LINE">SCHED_LINE.</param>
        /// <param name="PARTN_ROLE">PARTN_ROLE.</param>
        /// <param name="TABLE_NAME">TABLE_NAME.</param>
        /// <param name="FIELD_NAME">FIELD_NAME.</param>
        /// <param name="FIELD_TEXT">FIELD_TEXT.</param>
        public SimulateOrderResponseRootORDERINCOMPLETE(string DOC_NUMBER = default(string), string ITM_NUMBER = default(string), string SCHED_LINE = default(string), string PARTN_ROLE = default(string), string TABLE_NAME = default(string), string FIELD_NAME = default(string), string FIELD_TEXT = default(string))
        {
            this.DOC_NUMBER = DOC_NUMBER;
            this.ITM_NUMBER = ITM_NUMBER;
            this.SCHED_LINE = SCHED_LINE;
            this.PARTN_ROLE = PARTN_ROLE;
            this.TABLE_NAME = TABLE_NAME;
            this.FIELD_NAME = FIELD_NAME;
            this.FIELD_TEXT = FIELD_TEXT;
        }
        
        /// <summary>
        /// Gets or Sets DOC_NUMBER
        /// </summary>
        [DataMember(Name="DOC_NUMBER", EmitDefaultValue=false)]
        public string DOC_NUMBER { get; set; }

        /// <summary>
        /// Gets or Sets ITM_NUMBER
        /// </summary>
        [DataMember(Name="ITM_NUMBER", EmitDefaultValue=false)]
        public string ITM_NUMBER { get; set; }

        /// <summary>
        /// Gets or Sets SCHED_LINE
        /// </summary>
        [DataMember(Name="SCHED_LINE", EmitDefaultValue=false)]
        public string SCHED_LINE { get; set; }

        /// <summary>
        /// Gets or Sets PARTN_ROLE
        /// </summary>
        [DataMember(Name="PARTN_ROLE", EmitDefaultValue=false)]
        public string PARTN_ROLE { get; set; }

        /// <summary>
        /// Gets or Sets TABLE_NAME
        /// </summary>
        [DataMember(Name="TABLE_NAME", EmitDefaultValue=false)]
        public string TABLE_NAME { get; set; }

        /// <summary>
        /// Gets or Sets FIELD_NAME
        /// </summary>
        [DataMember(Name="FIELD_NAME", EmitDefaultValue=false)]
        public string FIELD_NAME { get; set; }

        /// <summary>
        /// Gets or Sets FIELD_TEXT
        /// </summary>
        [DataMember(Name="FIELD_TEXT", EmitDefaultValue=false)]
        public string FIELD_TEXT { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SimulateOrderResponseRootORDERINCOMPLETE {\n");
            sb.Append("  DOC_NUMBER: ").Append(DOC_NUMBER).Append("\n");
            sb.Append("  ITM_NUMBER: ").Append(ITM_NUMBER).Append("\n");
            sb.Append("  SCHED_LINE: ").Append(SCHED_LINE).Append("\n");
            sb.Append("  PARTN_ROLE: ").Append(PARTN_ROLE).Append("\n");
            sb.Append("  TABLE_NAME: ").Append(TABLE_NAME).Append("\n");
            sb.Append("  FIELD_NAME: ").Append(FIELD_NAME).Append("\n");
            sb.Append("  FIELD_TEXT: ").Append(FIELD_TEXT).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SimulateOrderResponseRootORDERINCOMPLETE);
        }

        /// <summary>
        /// Returns true if SimulateOrderResponseRootORDERINCOMPLETE instances are equal
        /// </summary>
        /// <param name="input">Instance of SimulateOrderResponseRootORDERINCOMPLETE to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SimulateOrderResponseRootORDERINCOMPLETE input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DOC_NUMBER == input.DOC_NUMBER ||
                    (this.DOC_NUMBER != null &&
                    this.DOC_NUMBER.Equals(input.DOC_NUMBER))
                ) && 
                (
                    this.ITM_NUMBER == input.ITM_NUMBER ||
                    (this.ITM_NUMBER != null &&
                    this.ITM_NUMBER.Equals(input.ITM_NUMBER))
                ) && 
                (
                    this.SCHED_LINE == input.SCHED_LINE ||
                    (this.SCHED_LINE != null &&
                    this.SCHED_LINE.Equals(input.SCHED_LINE))
                ) && 
                (
                    this.PARTN_ROLE == input.PARTN_ROLE ||
                    (this.PARTN_ROLE != null &&
                    this.PARTN_ROLE.Equals(input.PARTN_ROLE))
                ) && 
                (
                    this.TABLE_NAME == input.TABLE_NAME ||
                    (this.TABLE_NAME != null &&
                    this.TABLE_NAME.Equals(input.TABLE_NAME))
                ) && 
                (
                    this.FIELD_NAME == input.FIELD_NAME ||
                    (this.FIELD_NAME != null &&
                    this.FIELD_NAME.Equals(input.FIELD_NAME))
                ) && 
                (
                    this.FIELD_TEXT == input.FIELD_TEXT ||
                    (this.FIELD_TEXT != null &&
                    this.FIELD_TEXT.Equals(input.FIELD_TEXT))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DOC_NUMBER != null)
                    hashCode = hashCode * 59 + this.DOC_NUMBER.GetHashCode();
                if (this.ITM_NUMBER != null)
                    hashCode = hashCode * 59 + this.ITM_NUMBER.GetHashCode();
                if (this.SCHED_LINE != null)
                    hashCode = hashCode * 59 + this.SCHED_LINE.GetHashCode();
                if (this.PARTN_ROLE != null)
                    hashCode = hashCode * 59 + this.PARTN_ROLE.GetHashCode();
                if (this.TABLE_NAME != null)
                    hashCode = hashCode * 59 + this.TABLE_NAME.GetHashCode();
                if (this.FIELD_NAME != null)
                    hashCode = hashCode * 59 + this.FIELD_NAME.GetHashCode();
                if (this.FIELD_TEXT != null)
                    hashCode = hashCode * 59 + this.FIELD_TEXT.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
